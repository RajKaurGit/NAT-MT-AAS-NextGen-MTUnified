{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "name": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW",
        "connectionString": "Data Source=rxomtpusc1antsasq0001.database.windows.net;Initial Catalog=NextgenDW;Persist Security Info=true;User ID=MBISQDBREADPROD;Encrypt=true;TrustServerCertificate=false",
        "impersonationMode": "impersonateServiceAccount",
        "provider": "System.Data.SqlClient",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "AzureSqlDW"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "DimCarrier",
        "columns": [
          {
            "name": "CarrierKey",
            "dataType": "int64",
            "sourceColumn": "CarrierKey",
            "sourceProviderType": "bigint"
          },
          {
            "name": "CarrierNumber",
            "dataType": "string",
            "sourceColumn": "CarrierNumber",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "CarrierName",
            "dataType": "string",
            "sourceColumn": "CarrierName",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "FullName",
            "dataType": "string",
            "sourceColumn": "FullName"
          },
          {
            "name": "SynergyCarrierFlag",
            "dataType": "string",
            "sourceColumn": "SynergyCarrierFlag"
          }
        ],
        "partitions": [
          {
            "name": "DimCarrier",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "-- LastModified :4-26-2023 [RK] ",
                "--==================",
                "",
                "-- Carrier -- ",
                "",
                "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
                "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
                ";",
                "",
                "IF OBJECT_ID('Tempdb.dbo.#InterestedCarrier') IS NOT NULL DROP TABLE #InterestedCarrier;",
                "",
                "SELECT DISTINCT CarrierKey",
                "INTO #InterestedCarrier",
                "FROM [UsrRpt].[FactShipment] WITH ( NOLOCK )",
                "WHERE StartDateLocalKey>=@StartDate AND StartDateLocalKey<=@EndDate",
                "",
                "",
                "-- Carrier -- ",
                "Select ",
                "\t Carr.CarrierKey, CarrierName, CarrierNumber",
                "\t,CarrierNumber +'|' + CarrierName AS FullName ",
                "\t,CASE",
                "\t\tWHEN  CarrierNumber IN ('XPOL','TUB3','TUB4','XPO1') THEN 'MT_SynergySCAC'",
                "\t\tWHEN  CarrierNumber IN ('EPO2','EPO3','EPOI','XPOE','EPO4','ECAC','XPOA')  THEN 'ME_SynergySCAC'",
                "\t\tELSE 'N/A'",
                "\t\tEND AS SynergyCarrierFlag ",
                "FROM #InterestedCarrier F",
                "INNER JOIN [UsrRpt].[DimCarrier] Carr  WITH ( NOLOCK ) ON F.CarrierKey=Carr.CarrierKey"
              ],
              "dataSource": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- LastModified :4-26-2023 [RK] ",
                  "--==================",
                  "",
                  "-- Carrier -- ",
                  "",
                  "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
                  "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
                  ";",
                  "",
                  "IF OBJECT_ID('Tempdb.dbo.#InterestedCarrier') IS NOT NULL DROP TABLE #InterestedCarrier;",
                  "",
                  "SELECT DISTINCT CarrierKey",
                  "INTO #InterestedCarrier",
                  "FROM [UsrRpt].[FactShipment] WITH ( NOLOCK )",
                  "WHERE StartDateLocalKey>=@StartDate AND StartDateLocalKey<=@EndDate",
                  "",
                  "",
                  "-- Carrier -- ",
                  "Select ",
                  "\t Carr.CarrierKey, CarrierName, CarrierNumber",
                  "\t,CarrierNumber +'|' + CarrierName AS FullName ",
                  "\t,CASE",
                  "\t\tWHEN  CarrierNumber IN ('XPOL','TUB3','TUB4','XPO1') THEN 'MT_SynergySCAC'",
                  "\t\tWHEN  CarrierNumber IN ('EPO2','EPO3','EPOI','XPOE','EPO4','ECAC','XPOA')  THEN 'ME_SynergySCAC'",
                  "\t\tELSE 'N/A'",
                  "\t\tEND AS SynergyCarrierFlag ",
                  "FROM #InterestedCarrier F",
                  "INNER JOIN [UsrRpt].[DimCarrier] Carr  WITH ( NOLOCK ) ON F.CarrierKey=Carr.CarrierKey</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "-- LastModified :4-26-2023 [RK] ",
              "--==================",
              "",
              "-- Carrier -- ",
              "",
              "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
              "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
              ";",
              "",
              "IF OBJECT_ID('Tempdb.dbo.#InterestedCarrier') IS NOT NULL DROP TABLE #InterestedCarrier;",
              "",
              "SELECT DISTINCT CarrierKey",
              "INTO #InterestedCarrier",
              "FROM [UsrRpt].[FactShipment] WITH ( NOLOCK )",
              "WHERE StartDateLocalKey>=@StartDate AND StartDateLocalKey<=@EndDate",
              "",
              "",
              "-- Carrier -- ",
              "Select ",
              "\t Carr.CarrierKey, CarrierName, CarrierNumber",
              "\t,CarrierNumber +'|' + CarrierName AS FullName ",
              "\t,CASE",
              "\t\tWHEN  CarrierNumber IN ('XPOL','TUB3','TUB4','XPO1') THEN 'MT_SynergySCAC'",
              "\t\tWHEN  CarrierNumber IN ('EPO2','EPO3','EPOI','XPOE','EPO4','ECAC','XPOA')  THEN 'ME_SynergySCAC'",
              "\t\tELSE 'N/A'",
              "\t\tEND AS SynergyCarrierFlag ",
              "FROM #InterestedCarrier F",
              "INNER JOIN [UsrRpt].[DimCarrier] Carr  WITH ( NOLOCK ) ON F.CarrierKey=Carr.CarrierKey"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimCarrier"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "UsrRpt"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- LastModified :4-26-2023 [RK] ",
              "--==================",
              "",
              "-- Carrier -- ",
              "",
              "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
              "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
              ";",
              "",
              "IF OBJECT_ID('Tempdb.dbo.#InterestedCarrier') IS NOT NULL DROP TABLE #InterestedCarrier;",
              "",
              "SELECT DISTINCT CarrierKey",
              "INTO #InterestedCarrier",
              "FROM [UsrRpt].[FactShipment] WITH ( NOLOCK )",
              "WHERE StartDateLocalKey>=@StartDate AND StartDateLocalKey<=@EndDate",
              "",
              "",
              "-- Carrier -- ",
              "Select ",
              "\t Carr.CarrierKey, CarrierName, CarrierNumber",
              "\t,CarrierNumber +'|' + CarrierName AS FullName ",
              "\t,CASE",
              "\t\tWHEN  CarrierNumber IN ('XPOL','TUB3','TUB4','XPO1') THEN 'MT_SynergySCAC'",
              "\t\tWHEN  CarrierNumber IN ('EPO2','EPO3','EPOI','XPOE','EPO4','ECAC','XPOA')  THEN 'ME_SynergySCAC'",
              "\t\tELSE 'N/A'",
              "\t\tEND AS SynergyCarrierFlag ",
              "FROM #InterestedCarrier F",
              "INNER JOIN [UsrRpt].[DimCarrier] Carr  WITH ( NOLOCK ) ON F.CarrierKey=Carr.CarrierKey</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimCustomer",
        "columns": [
          {
            "name": "CustomerKey",
            "dataType": "int64",
            "sourceColumn": "CustomerKey",
            "sourceProviderType": "bigint"
          },
          {
            "name": "CustomerName",
            "dataType": "string",
            "sourceColumn": "CustomerName",
            "sourceProviderType": "nvarchar"
          },
          {
            "name": "IndustryVertical",
            "dataType": "string",
            "sourceColumn": "IndustryVertical"
          }
        ],
        "partitions": [
          {
            "name": "DimCustomer",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "-- Last Modified : 4-21-2023 [RK]",
                "--===================",
                "",
                "SELECT \tCustomerKey, ",
                "\t",
                "CASE \tWHEN CustomerName = 'CharterCommunications' THEN 'Charter'",
                "\tELSE CustomerName",
                "END AS [CustomerName],",
                "CASE WHEN CustomerKey IN (61,28,30,76) THEN 'Agriculture and Chemicals'",
                "\tWHEN CustomerKey IN (23,53,51,22,41) THEN 'Automotive'",
                "\tWHEN CustomerKey IN(16, 29) THEN 'Food and Beverage'",
                "\tWHEN CustomerKey IN (21,32,10,52,67,13,71,70) THEN 'Industrial and Manufacturing'",
                "\tWHEN CustomerKey IN (44) THEN 'Life Sciences'",
                "\tWHEN CustomerKey IN (17) THEN 'Logistics and Transportation'",
                "\tWHEN CustomerKey IN (50,12,72) THEN 'Oil & Gas'",
                "\tWHEN CustomerKey IN (35, 20, 68, 73, 74) THEN 'Retail and eCommerce'",
                "\tWHEN CustomerKey IN (43) THEN 'Recreational'",
                "\tWHEN CustomerKey IN (37) Then 'Fast Moving Consumer Goods'",
                "\tELSE 'Other'",
                "END AS [IndustryVertical]",
                "FROM UsrRpt.[DimCustomer] ",
                "GROUP BY CustomerKey, CustomerName",
                "ORDER BY CustomerName"
              ],
              "dataSource": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Last Modified : 4-21-2023 [RK]",
                  "--===================",
                  "",
                  "SELECT \tCustomerKey, ",
                  "\t",
                  "CASE \tWHEN CustomerName = 'CharterCommunications' THEN 'Charter'",
                  "\tELSE CustomerName",
                  "END AS [CustomerName],",
                  "CASE WHEN CustomerKey IN (61,28,30,76) THEN 'Agriculture and Chemicals'",
                  "\tWHEN CustomerKey IN (23,53,51,22,41) THEN 'Automotive'",
                  "\tWHEN CustomerKey IN(16, 29) THEN 'Food and Beverage'",
                  "\tWHEN CustomerKey IN (21,32,10,52,67,13,71,70) THEN 'Industrial and Manufacturing'",
                  "\tWHEN CustomerKey IN (44) THEN 'Life Sciences'",
                  "\tWHEN CustomerKey IN (17) THEN 'Logistics and Transportation'",
                  "\tWHEN CustomerKey IN (50,12,72) THEN 'Oil & Gas'",
                  "\tWHEN CustomerKey IN (35, 20, 68, 73, 74) THEN 'Retail and eCommerce'",
                  "\tWHEN CustomerKey IN (43) THEN 'Recreational'",
                  "\tWHEN CustomerKey IN (37) Then 'Fast Moving Consumer Goods'",
                  "\tELSE 'Other'",
                  "END AS [IndustryVertical]",
                  "FROM UsrRpt.[DimCustomer] ",
                  "GROUP BY CustomerKey, CustomerName",
                  "ORDER BY CustomerName</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "-- Last Modified : 4-21-2023 [RK]",
              "--===================",
              "",
              "SELECT \tCustomerKey, ",
              "\t",
              "CASE \tWHEN CustomerName = 'CharterCommunications' THEN 'Charter'",
              "\tELSE CustomerName",
              "END AS [CustomerName],",
              "CASE WHEN CustomerKey IN (61,28,30,76) THEN 'Agriculture and Chemicals'",
              "\tWHEN CustomerKey IN (23,53,51,22,41) THEN 'Automotive'",
              "\tWHEN CustomerKey IN(16, 29) THEN 'Food and Beverage'",
              "\tWHEN CustomerKey IN (21,32,10,52,67,13,71,70) THEN 'Industrial and Manufacturing'",
              "\tWHEN CustomerKey IN (44) THEN 'Life Sciences'",
              "\tWHEN CustomerKey IN (17) THEN 'Logistics and Transportation'",
              "\tWHEN CustomerKey IN (50,12,72) THEN 'Oil & Gas'",
              "\tWHEN CustomerKey IN (35, 20, 68, 73, 74) THEN 'Retail and eCommerce'",
              "\tWHEN CustomerKey IN (43) THEN 'Recreational'",
              "\tWHEN CustomerKey IN (37) Then 'Fast Moving Consumer Goods'",
              "\tELSE 'Other'",
              "END AS [IndustryVertical]",
              "FROM UsrRpt.[DimCustomer] ",
              "GROUP BY CustomerKey, CustomerName",
              "ORDER BY CustomerName"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimCustomer"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "UsrRpt"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Last Modified : 4-21-2023 [RK]",
              "--===================",
              "",
              "SELECT \tCustomerKey, ",
              "\t",
              "CASE \tWHEN CustomerName = 'CharterCommunications' THEN 'Charter'",
              "\tELSE CustomerName",
              "END AS [CustomerName],",
              "CASE WHEN CustomerKey IN (61,28,30,76) THEN 'Agriculture and Chemicals'",
              "\tWHEN CustomerKey IN (23,53,51,22,41) THEN 'Automotive'",
              "\tWHEN CustomerKey IN(16, 29) THEN 'Food and Beverage'",
              "\tWHEN CustomerKey IN (21,32,10,52,67,13,71,70) THEN 'Industrial and Manufacturing'",
              "\tWHEN CustomerKey IN (44) THEN 'Life Sciences'",
              "\tWHEN CustomerKey IN (17) THEN 'Logistics and Transportation'",
              "\tWHEN CustomerKey IN (50,12,72) THEN 'Oil & Gas'",
              "\tWHEN CustomerKey IN (35, 20, 68, 73, 74) THEN 'Retail and eCommerce'",
              "\tWHEN CustomerKey IN (43) THEN 'Recreational'",
              "\tWHEN CustomerKey IN (37) Then 'Fast Moving Consumer Goods'",
              "\tELSE 'Other'",
              "END AS [IndustryVertical]",
              "FROM UsrRpt.[DimCustomer] ",
              "GROUP BY CustomerKey, CustomerName",
              "ORDER BY CustomerName</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "FactShipment",
        "columns": [
          {
            "name": "CustomerKey",
            "dataType": "int64",
            "sourceColumn": "CustomerKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "BlendedAPCost",
            "dataType": "double",
            "sourceColumn": "BlendedAPCost",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "sourceProviderType": "Decimal",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "IsManaged",
            "dataType": "int64",
            "sourceColumn": "IsManaged",
            "sourceProviderType": "Integer"
          },
          {
            "name": "IsExpedited",
            "dataType": "int64",
            "sourceColumn": "IsExpedited",
            "sourceProviderType": "Integer"
          },
          {
            "name": "IsSpot",
            "dataType": "int64",
            "sourceColumn": "IsSpot",
            "sourceProviderType": "Integer"
          },
          {
            "name": "StartDateLocal",
            "dataType": "dateTime",
            "sourceColumn": "StartDateLocal",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "CarrierNumber",
            "dataType": "string",
            "sourceColumn": "CarrierNumber",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CarrierName",
            "dataType": "string",
            "sourceColumn": "CarrierName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ModeNumber",
            "dataType": "string",
            "sourceColumn": "ModeNumber",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LaneCity",
            "dataType": "string",
            "sourceColumn": "LaneCity",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LaneZip3",
            "dataType": "string",
            "sourceColumn": "LaneZip3",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LaneZip5",
            "dataType": "string",
            "sourceColumn": "LaneZip5",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "LaneState",
            "dataType": "string",
            "sourceColumn": "LaneState",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "OrdConsolidationFlag",
            "dataType": "string",
            "sourceColumn": "OrdConsolidationFlag",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ShipmentCount",
            "dataType": "int64",
            "sourceColumn": "ShipmentCount"
          },
          {
            "name": "TotalPallets",
            "dataType": "double",
            "sourceColumn": "TotalPallets"
          },
          {
            "name": "TotalDistance",
            "dataType": "double",
            "sourceColumn": "TotalDistance"
          },
          {
            "name": "TotalWeight",
            "dataType": "double",
            "sourceColumn": "TotalWeight"
          },
          {
            "name": "TotalOrderConsolidation",
            "dataType": "int64",
            "sourceColumn": "TotalOrderConsolidation"
          },
          {
            "name": "AvgCPPallet",
            "dataType": "double",
            "sourceColumn": "AvgCPPallet",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "AvgCPM",
            "dataType": "double",
            "sourceColumn": "AvgCPM",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "AvgCPP",
            "dataType": "double",
            "sourceColumn": "AvgCPP",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "StartDateKey",
            "dataType": "int64",
            "sourceColumn": "StartDateKey"
          },
          {
            "name": "CarrierKey",
            "dataType": "int64",
            "sourceColumn": "CarrierKey"
          },
          {
            "name": "ModeKey",
            "dataType": "int64",
            "sourceColumn": "ModeKey"
          },
          {
            "name": "SourceLocationKey",
            "dataType": "int64",
            "sourceColumn": "SourceLocationKey"
          },
          {
            "name": "DestinationLocationKey",
            "dataType": "int64",
            "sourceColumn": "DestinationLocationKey"
          }
        ],
        "partitions": [
          {
            "name": "FactShipment",
            "source": {
              "type": "query",
              "query": [
                "-- Last Modified : 4-21-2023 [RK]",
                "",
                "--Name : MT Executive Dashboard",
                "--Report Description : Shipment count and FUM from NextGenDW.",
                "--Note: Include BlendedAPCost",
                "-- Any shipment with total BlendedAPCost > $700,000 has been excluded from the FUM and shipment count charts in this report. The value of $700,000 has been considered to align with the upper limit of air charter shipments.",
                "--=======================================",
                "",
                "DECLARE @InsertStartDate date  = DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)) --'3/22/2023' ",
                "DECLARE @InsertEndDate   date = GETDATE()",
                "------------------------------------=====-",
                "",
                "IF OBJECT_ID('tempdb..#ShipmentInterest') IS NOT NULL DROP TABLE #ShipmentInterest",
                "SELECT  cust.CustomerKey,Shp.ShipmentKey,Shp.ShipmentID,CAST(Shp.StartDateLocal AS DATE) AS StartDateLocal",
                "INTO   #ShipmentInterest",
                "FROM\tUsrRpt.DimShipment Shp  ",
                "JOIN UsrRpt.DimCustomer cust ON Shp.DomainName = cust.DomainName",
                "WHERE  CAST(Shp.StartDateLocal AS DATE) BETWEEN @InsertStartDate AND @InsertEndDate ",
                "AND Shp.AP_AR = 'AP'  ",
                "--AND Shp.DomainName IN ('MENLO/A200') -- 28 Dow Only for Testing.",
                "--AND Shp.DomainName IN ('OTM/A031','OTM/A042','MENLO/A200','OTM/A052','OTM/A053') -- 35 Grainger, 28 Dow, 50 Baker, 72 Sch, 73 Zappos",
                "",
                "CREATE NONCLUSTERED INDEX ix_ShpId ON #ShipmentInterest(ShipmentKey)",
                "--Select count(1) from #ShipmentInterest --2,412,201 rows",
                "--Select * from #ShipmentInterest",
                "---------------------------------------------------------------------- ",
                "",
                "IF OBJECT_ID('tempdb..#ShipmentDetails') IS NOT NULL DROP TABLE #ShipmentDetails",
                "SELECT F.ShipmentKey,S.ShipmentID,F.CustomerKey,S.StartDateLocal,dt.DateKey As StartDateKey",
                "\t ,DC.CarrierKey, DC.CarrierNumber,DC.CarrierName,DSI.IsXPOManaged, DSI.IsExpedited, DSI.IsSpot, DM.ModeKey, DM.ModeNumber",
                "\t ,F.LaneKey",
                "\t ,[Pallets] = F.[Pallets]",
                "\t ,[Distance] = cast(F.[LoadedDistance] as decimal (10,2))     ",
                "\t ,[Weight]\t= cast(F.[GrossWeight] as decimal(15,2)) ",
                "\t ,[OrderConsolidation] = cast(ds.NumberOfOrders as int)  ",
                "\t ,F.SourceLocationKey",
                "\t ,F.DestinationLocationKey",
                "\t  ",
                "INTO #ShipmentDetails",
                "FROM #ShipmentInterest S INNER JOIN UsrRpt.FactShipment F WITH(NOLOCK) ON S.ShipmentKey = F.ShipmentKey ",
                "                         INNER JOIN UsrRpt.DimCarrier DC WITH(NOLOCK) ON DC.CarrierKey = F.CarrierKey",
                "\t\t\t\t\t\t INNER JOIN UsrRpt.DimMode dm WITH(NOLOCK) ON F.ModeKey = dm.ModeKey -- [RK] actual mode, there is a different field for planned mode.",
                "\t\t\t\t\t\t INNER JOIN UsrRpt.DimShipment DS WITH(NOLOCK) ON S.ShipmentKey = DS.ShipmentKey ",
                "\t\t\t\t         INNER JOIN UsrRpt.DimShipmentIndicator DSI WITH(NOLOCK) ON S.ShipmentKey = DSI.ShipmentKey",
                "\t\t\t\t\t\t JOIN UsrRpt.DimDate dt ON S.StartDateLocal = dt.Date",
                "WHERE DSI.IsXPOManaged =1 AND dc.CarrierNumber NOT IN ('DBID', 'DCHG', 'MLOG','WICO') -- Only managed business matters, plus remove dummy scac.\t\t\t\t\t  \t\t",
                "CREATE NONCLUSTERED INDEX ix_ShipmentKey ON #ShipmentDetails(ShipmentKey,CustomerKey)",
                "--Select Top 100* from #ShipmentDetails --2,412,205 rows",
                "",
                "--------------------------------------------------------------",
                "",
                "IF OBJECT_ID('tempdb..#Finance') IS NOT NULL DROP TABLE #Finance",
                "SELECT   SUM(ISNULL(F.BlendedAPCost,0)) AS BlendedAPCost,F.CustomerKey,F.ShipmentKey,S.ShipmentID",
                "\t    ,S.IsXPOManaged,S.StartDateLocal,S.StartDateKey, S.CarrierKey, S.CarrierNumber,S.CarrierName,S.IsExpedited, S.IsSpot, S.ModeKey, S.ModeNumber ",
                "\t\t,Ln.[LaneCity] ,Ln.[LaneZip3] ,Ln.[LaneZip5] ,Ln.[LaneState]",
                "\t\t,S.[Pallets],S.[Distance],S.[Weight],S.[OrderConsolidation]",
                "\t\t,S.SourceLocationKey",
                "\t\t,S.DestinationLocationKey",
                "\t\t",
                "INTO #Finance ",
                "FROM UsrRpt.FactFinance F WITH (NOLOCK) ",
                "\tINNER JOIN #ShipmentDetails S  ON  S.ShipmentKey = F.ShipmentKey",
                "\tLEFT JOIN UsrRpt.DimLane Ln ON S.LaneKey = Ln.LaneKey",
                "GROUP BY F.CustomerKey,F.ShipmentKey,S.ShipmentID,S.IsXPOManaged,S.StartDateLocal,S.StartDateKey,S.CarrierNumber",
                "\t\t ,S.CarrierKey,S.CarrierName,S.IsExpedited, S.IsSpot, S.ModeKey, S.ModeNumber",
                "\t\t,Ln.LaneCity,Ln.LaneZip3,Ln.LaneZip5,Ln.LaneState",
                "\t\t,S.[Pallets],S.[Distance],S.[Weight],S.[OrderConsolidation],S.SourceLocationKey,S.DestinationLocationKey",
                "HAVING SUM(ISNULL(F.BlendedAPCost,0)) < 700000 ",
                "",
                "CREATE NONCLUSTERED INDEX ic_ShipmentKey ON #Finance(ShipmentKey,CustomerKey)",
                "--Select * From #Finance  --2,412,201 rows",
                "",
                "------------------------------------------------",
                "-- Calculate othet Shipment Level aggregates here.",
                "IF OBJECT_ID('tempdb..#FinanceCostIndicators') IS NOT NULL DROP TABLE #FinanceCostIndicators",
                "Select ",
                "\t  BlendedAPCost, CustomerKey, ShipmentKey, ShipmentID",
                "\t ,Cast(IsXPOManaged as Int) AS IsManaged",
                "\t ,Cast(IsExpedited as Int) AS IsExpedited",
                "\t ,Cast(IsSpot as Int) AS IsSpot",
                "\t ,StartDateLocal,StartDateKey, CarrierKey, CarrierNumber,CarrierName",
                "\t ,ModeKey,ModeNumber, LaneCity,LaneZip3,LaneZip5,LaneState",
                "\t ,Pallets, Distance, [Weight]",
                "\t ,OrderConsolidation",
                "\t ,SourceLocationKey,DestinationLocationKey",
                "\t ,CASE WHEN OrderConsolidation > 1 THEN 'C'",
                "\t\t ELSE 'NC'",
                "\t  END AS [OrdConsolidationFlag] ",
                "\t ,BlendedAPCost/ NULLIF(Pallets, 0) AS [CPPallet]",
                "\t ,BlendedAPCost/ NULLIF(Distance, 0) AS [CPM]",
                "\t ,BlendedAPCost/ NULLIF([Weight], 0) AS [CPP]",
                "",
                "INTO #FinanceCostIndicators",
                "FROM #Finance ",
                "",
                "CREATE NONCLUSTERED INDEX ic_FinanceCostKey ON #FinanceCostIndicators(ShipmentKey,CustomerKey)",
                "--Select top 10* From #FinanceCostIndicators",
                "",
                "-------Final -------------------------------------------",
                "SELECT CustomerKey",
                "    ,COUNT(ShipmentID) AS ShipmentCount ",
                "\t,SUM(BlendedAPCost) AS BlendedAPCost",
                "\t,SUM([Pallets]) As TotalPallets",
                "\t,SUM([Distance]) As TotalDistance",
                "\t,Sum([Weight]) As [TotalWeight]",
                "\t,SUM([OrderConsolidation]) As [TotalOrderConsolidation] ",
                "\t,Avg([CPPallet]) As [AvgCPPallet]",
                "\t,Avg([CPM]) As [AvgCPM]",
                "\t,Avg([CPP]) As [AvgCPP]",
                "\t,IsManaged",
                "\t,IsExpedited",
                "\t,IsSpot",
                "\t,StartDateLocal",
                "\t,StartDateKey",
                "\t,CarrierKey",
                "\t,CarrierNumber, CarrierName",
                "\t,ModeKey, ModeNumber, LaneCity,LaneZip3,LaneZip5,LaneState",
                "\t,OrdConsolidationFlag",
                "\t,SourceLocationKey",
                "\t,DestinationLocationKey",
                "FROM  #FinanceCostIndicators",
                "GROUP BY CustomerKey,IsManaged, IsExpedited, IsSpot, StartDateLocal,StartDateKey, CarrierKey, CarrierNumber, CarrierName ,ModeKey, ModeNumber, LaneCity,LaneZip3,LaneZip5,LaneState,OrdConsolidationFlag, SourceLocationKey,DestinationLocationKey",
                "-- 645,916 rows - Grainger only"
              ],
              "dataSource": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Last Modified : 4-21-2023 [RK]",
                  "",
                  "--Name : MT Executive Dashboard",
                  "--Report Description : Shipment count and FUM from NextGenDW.",
                  "--Note: Include BlendedAPCost",
                  "-- Any shipment with total BlendedAPCost > $700,000 has been excluded from the FUM and shipment count charts in this report. The value of $700,000 has been considered to align with the upper limit of air charter shipments.",
                  "--=======================================",
                  "",
                  "DECLARE @InsertStartDate date  = DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)) --'3/22/2023' ",
                  "DECLARE @InsertEndDate   date = GETDATE()",
                  "------------------------------------=====-",
                  "",
                  "IF OBJECT_ID('tempdb..#ShipmentInterest') IS NOT NULL DROP TABLE #ShipmentInterest",
                  "SELECT  cust.CustomerKey,Shp.ShipmentKey,Shp.ShipmentID,CAST(Shp.StartDateLocal AS DATE) AS StartDateLocal",
                  "INTO   #ShipmentInterest",
                  "FROM\tUsrRpt.DimShipment Shp  ",
                  "JOIN UsrRpt.DimCustomer cust ON Shp.DomainName = cust.DomainName",
                  "WHERE  CAST(Shp.StartDateLocal AS DATE) BETWEEN @InsertStartDate AND @InsertEndDate ",
                  "AND Shp.AP_AR = 'AP'  ",
                  "--AND Shp.DomainName IN ('MENLO/A200') -- 28 Dow Only for Testing.",
                  "--AND Shp.DomainName IN ('OTM/A031','OTM/A042','MENLO/A200','OTM/A052','OTM/A053') -- 35 Grainger, 28 Dow, 50 Baker, 72 Sch, 73 Zappos",
                  "",
                  "CREATE NONCLUSTERED INDEX ix_ShpId ON #ShipmentInterest(ShipmentKey)",
                  "--Select count(1) from #ShipmentInterest --2,412,201 rows",
                  "--Select * from #ShipmentInterest",
                  "---------------------------------------------------------------------- ",
                  "",
                  "IF OBJECT_ID('tempdb..#ShipmentDetails') IS NOT NULL DROP TABLE #ShipmentDetails",
                  "SELECT F.ShipmentKey,S.ShipmentID,F.CustomerKey,S.StartDateLocal,dt.DateKey As StartDateKey",
                  "\t ,DC.CarrierKey, DC.CarrierNumber,DC.CarrierName,DSI.IsXPOManaged, DSI.IsExpedited, DSI.IsSpot, DM.ModeKey, DM.ModeNumber",
                  "\t ,F.LaneKey",
                  "\t ,[Pallets] = F.[Pallets]",
                  "\t ,[Distance] = cast(F.[LoadedDistance] as decimal (10,2))     ",
                  "\t ,[Weight]\t= cast(F.[GrossWeight] as decimal(15,2)) ",
                  "\t ,[OrderConsolidation] = cast(ds.NumberOfOrders as int)  ",
                  "\t ,F.SourceLocationKey",
                  "\t ,F.DestinationLocationKey",
                  "\t  ",
                  "INTO #ShipmentDetails",
                  "FROM #ShipmentInterest S INNER JOIN UsrRpt.FactShipment F WITH(NOLOCK) ON S.ShipmentKey = F.ShipmentKey ",
                  "                         INNER JOIN UsrRpt.DimCarrier DC WITH(NOLOCK) ON DC.CarrierKey = F.CarrierKey",
                  "\t\t\t\t\t\t INNER JOIN UsrRpt.DimMode dm WITH(NOLOCK) ON F.ModeKey = dm.ModeKey -- [RK] actual mode, there is a different field for planned mode.",
                  "\t\t\t\t\t\t INNER JOIN UsrRpt.DimShipment DS WITH(NOLOCK) ON S.ShipmentKey = DS.ShipmentKey ",
                  "\t\t\t\t         INNER JOIN UsrRpt.DimShipmentIndicator DSI WITH(NOLOCK) ON S.ShipmentKey = DSI.ShipmentKey",
                  "\t\t\t\t\t\t JOIN UsrRpt.DimDate dt ON S.StartDateLocal = dt.Date",
                  "WHERE DSI.IsXPOManaged =1 AND dc.CarrierNumber NOT IN ('DBID', 'DCHG', 'MLOG','WICO') -- Only managed business matters, plus remove dummy scac.\t\t\t\t\t  \t\t",
                  "CREATE NONCLUSTERED INDEX ix_ShipmentKey ON #ShipmentDetails(ShipmentKey,CustomerKey)",
                  "--Select Top 100* from #ShipmentDetails --2,412,205 rows",
                  "",
                  "--------------------------------------------------------------",
                  "",
                  "IF OBJECT_ID('tempdb..#Finance') IS NOT NULL DROP TABLE #Finance",
                  "SELECT   SUM(ISNULL(F.BlendedAPCost,0)) AS BlendedAPCost,F.CustomerKey,F.ShipmentKey,S.ShipmentID",
                  "\t    ,S.IsXPOManaged,S.StartDateLocal,S.StartDateKey, S.CarrierKey, S.CarrierNumber,S.CarrierName,S.IsExpedited, S.IsSpot, S.ModeKey, S.ModeNumber ",
                  "\t\t,Ln.[LaneCity] ,Ln.[LaneZip3] ,Ln.[LaneZip5] ,Ln.[LaneState]",
                  "\t\t,S.[Pallets],S.[Distance],S.[Weight],S.[OrderConsolidation]",
                  "\t\t,S.SourceLocationKey",
                  "\t\t,S.DestinationLocationKey",
                  "\t\t",
                  "INTO #Finance ",
                  "FROM UsrRpt.FactFinance F WITH (NOLOCK) ",
                  "\tINNER JOIN #ShipmentDetails S  ON  S.ShipmentKey = F.ShipmentKey",
                  "\tLEFT JOIN UsrRpt.DimLane Ln ON S.LaneKey = Ln.LaneKey",
                  "GROUP BY F.CustomerKey,F.ShipmentKey,S.ShipmentID,S.IsXPOManaged,S.StartDateLocal,S.StartDateKey,S.CarrierNumber",
                  "\t\t ,S.CarrierKey,S.CarrierName,S.IsExpedited, S.IsSpot, S.ModeKey, S.ModeNumber",
                  "\t\t,Ln.LaneCity,Ln.LaneZip3,Ln.LaneZip5,Ln.LaneState",
                  "\t\t,S.[Pallets],S.[Distance],S.[Weight],S.[OrderConsolidation],S.SourceLocationKey,S.DestinationLocationKey",
                  "HAVING SUM(ISNULL(F.BlendedAPCost,0)) < 700000 ",
                  "",
                  "CREATE NONCLUSTERED INDEX ic_ShipmentKey ON #Finance(ShipmentKey,CustomerKey)",
                  "--Select * From #Finance  --2,412,201 rows",
                  "",
                  "------------------------------------------------",
                  "-- Calculate othet Shipment Level aggregates here.",
                  "IF OBJECT_ID('tempdb..#FinanceCostIndicators') IS NOT NULL DROP TABLE #FinanceCostIndicators",
                  "Select ",
                  "\t  BlendedAPCost, CustomerKey, ShipmentKey, ShipmentID",
                  "\t ,Cast(IsXPOManaged as Int) AS IsManaged",
                  "\t ,Cast(IsExpedited as Int) AS IsExpedited",
                  "\t ,Cast(IsSpot as Int) AS IsSpot",
                  "\t ,StartDateLocal,StartDateKey, CarrierKey, CarrierNumber,CarrierName",
                  "\t ,ModeKey,ModeNumber, LaneCity,LaneZip3,LaneZip5,LaneState",
                  "\t ,Pallets, Distance, [Weight]",
                  "\t ,OrderConsolidation",
                  "\t ,SourceLocationKey,DestinationLocationKey",
                  "\t ,CASE WHEN OrderConsolidation > 1 THEN 'C'",
                  "\t\t ELSE 'NC'",
                  "\t  END AS [OrdConsolidationFlag] ",
                  "\t ,BlendedAPCost/ NULLIF(Pallets, 0) AS [CPPallet]",
                  "\t ,BlendedAPCost/ NULLIF(Distance, 0) AS [CPM]",
                  "\t ,BlendedAPCost/ NULLIF([Weight], 0) AS [CPP]",
                  "",
                  "INTO #FinanceCostIndicators",
                  "FROM #Finance ",
                  "",
                  "CREATE NONCLUSTERED INDEX ic_FinanceCostKey ON #FinanceCostIndicators(ShipmentKey,CustomerKey)",
                  "--Select top 10* From #FinanceCostIndicators",
                  "",
                  "-------Final -------------------------------------------",
                  "SELECT CustomerKey",
                  "    ,COUNT(ShipmentID) AS ShipmentCount ",
                  "\t,SUM(BlendedAPCost) AS BlendedAPCost",
                  "\t,SUM([Pallets]) As TotalPallets",
                  "\t,SUM([Distance]) As TotalDistance",
                  "\t,Sum([Weight]) As [TotalWeight]",
                  "\t,SUM([OrderConsolidation]) As [TotalOrderConsolidation] ",
                  "\t,Avg([CPPallet]) As [AvgCPPallet]",
                  "\t,Avg([CPM]) As [AvgCPM]",
                  "\t,Avg([CPP]) As [AvgCPP]",
                  "\t,IsManaged",
                  "\t,IsExpedited",
                  "\t,IsSpot",
                  "\t,StartDateLocal",
                  "\t,StartDateKey",
                  "\t,CarrierKey",
                  "\t,CarrierNumber, CarrierName",
                  "\t,ModeKey, ModeNumber, LaneCity,LaneZip3,LaneZip5,LaneState",
                  "\t,OrdConsolidationFlag",
                  "\t,SourceLocationKey",
                  "\t,DestinationLocationKey",
                  "FROM  #FinanceCostIndicators",
                  "GROUP BY CustomerKey,IsManaged, IsExpedited, IsSpot, StartDateLocal,StartDateKey, CarrierKey, CarrierNumber, CarrierName ,ModeKey, ModeNumber, LaneCity,LaneZip3,LaneZip5,LaneState,OrdConsolidationFlag, SourceLocationKey,DestinationLocationKey",
                  "-- 645,916 rows - Grainger only</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "ShipmentTotal",
            "expression": " sum(FactShipment[ShipmentCount])",
            "formatString": "#,0",
            "displayFolder": "Shipments\\FirstLevel"
          },
          {
            "name": "ShipmentsYTD",
            "expression": " TotalYTD([ShipmentTotal],'DateTable'[Date])",
            "formatString": "#,0",
            "displayFolder": "Shipments\\Overall Shipments MTDYTD"
          },
          {
            "name": "ShipmentsSamePeriod LastYear",
            "expression": [
              " ",
              "CALCULATE",
              "(  [ShipmentsYTD],",
              "    SAMEPERIODLASTYEAR('DateTable'[Date])",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Overall Shipments MTDYTD"
          },
          {
            "name": "calcCPM",
            "expression": " DIVIDE([TotalFUM],SUM('FactShipment'[TotalDistance]))",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Shipments\\FirstLevel",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "TotalFUM",
            "expression": " SUM(FactShipment[BlendedAPCost])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "FUM\\FirstLevel",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "calcCPP",
            "expression": [
              " DIVIDE([TotalFUM],SUM('FactShipment'[TotalWeight]))",
              ""
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Shipments\\FirstLevel",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "calcCPPallet",
            "expression": [
              " DIVIDE([TotalFUM],SUM('FactShipment'[TotalPallets]))",
              ""
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "displayFolder": "Shipments\\FirstLevel",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "calcSpotShipments",
            "expression": [
              " ",
              "CALCULATE(",
              "    SUM('FactShipment'[IsSpot])",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\FirstLevel"
          },
          {
            "name": "calcContractedShipments",
            "expression": [
              " ",
              "CALCULATE(",
              "    [ShipmentTotal] - [calcSpotShipments]",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\FirstLevel"
          },
          {
            "name": "calcExpediteShipments",
            "expression": [
              " ",
              "CALCULATE(",
              "    [ShipmentTotal],",
              "    KEEPFILTERS('FactShipment'[IsExpedited] = 1)",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\FirstLevel"
          },
          {
            "name": "calcShipmentsWithOrdersConsolidated",
            "expression": [
              " ",
              "CALCULATE(",
              "    [ShipmentTotal],",
              "   KEEPFILTERS('FactShipment'[OrdConsolidationFlag] = \"C\")",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\FirstLevel"
          },
          {
            "name": "calcShipmentsWithOrdersNotConsolidated",
            "expression": " ([ShipmentTotal] - [calcShipmentsWithOrdersConsolidated])",
            "formatString": "#,0",
            "displayFolder": "Shipments\\FirstLevel"
          },
          {
            "name": "ShipmentsYoY",
            "expression": [
              " ",
              "IF(ISBLANK([ShipmentsSamePeriod LastYear]),blank(),[ShipmentsYTD] - [ShipmentsSamePeriod LastYear])"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Overall Shipments MTDYTD"
          },
          {
            "name": "Shipments Growth %",
            "expression": " DIVIDE([ShipmentsYoY],[ShipmentsSamePeriod LastYear])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Overall Shipments MTDYTD"
          },
          {
            "name": "ShipmentsMTD",
            "expression": " TotalMTD([ShipmentTotal],'DateTable'[Date])",
            "formatString": "#,0",
            "displayFolder": "Shipments\\Overall Shipments MTDYTD"
          },
          {
            "name": "ShipmentsSamePeriod LastYear MTD",
            "expression": [
              " ",
              "CALCULATE",
              "(  [ShipmentsMTD],",
              "    SAMEPERIODLASTYEAR('DateTable'[Date])",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Overall Shipments MTDYTD"
          },
          {
            "name": "ShipmentsSamePeriod LastYear QTD",
            "expression": [
              " ",
              "CALCULATE",
              "(  [ShipmentsQTD],",
              "    SAMEPERIODLASTYEAR('DateTable'[Date])",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Overall Shipments MTDYTD"
          },
          {
            "name": "ShipmentsQTD",
            "expression": " TotalQTD([ShipmentTotal],'DateTable'[Date])",
            "formatString": "#,0",
            "displayFolder": "Shipments\\Overall Shipments MTDYTD"
          },
          {
            "name": "ShipmentsMoM",
            "expression": [
              " ",
              "IF(ISBLANK([ShipmentsSamePeriod LastYear MTD]),blank(),[ShipmentsMTD] - [ShipmentsSamePeriod LastYear MTD])"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Overall Shipments MTDYTD"
          },
          {
            "name": "ShipmentsQoQ",
            "expression": [
              " ",
              "IF(ISBLANK([ShipmentsSamePeriod LastYear QTD]),blank(),[ShipmentsQTD] - [ShipmentsSamePeriod LastYear QTD])"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Overall Shipments MTDYTD"
          },
          {
            "name": "SpotYTD",
            "expression": " TotalYTD([TotalSpot],'DateTable'[Date])",
            "formatString": "#,0",
            "displayFolder": "Shipments\\Spot"
          },
          {
            "name": "TotalSpot",
            "expression": " SUM(FactShipment[IsSpot])",
            "formatString": "#,0",
            "displayFolder": "Shipments\\Spot"
          },
          {
            "name": "SpotSamePeriod LastYear",
            "expression": [
              " ",
              "CALCULATE",
              "(  [SpotYTD],",
              "    SAMEPERIODLASTYEAR('DateTable'[Date])",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Spot"
          },
          {
            "name": "Spot%SelectedPeriod",
            "expression": " DIVIDE([calcSpotShipments],[ShipmentTotal])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Spot"
          },
          {
            "name": "Spot%",
            "expression": " DIVIDE([SpotYTD],[ShipmentsYTD])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Spot"
          },
          {
            "name": "Spot YoY",
            "expression": [
              " ",
              "IF(ISBLANK([SpotSamePeriod LastYear]),blank(),[SpotYTD] - [SpotSamePeriod LastYear])"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Spot"
          },
          {
            "name": "Spot Growth %",
            "expression": " DIVIDE([Spot YoY],[SpotSamePeriod LastYear])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Spot"
          },
          {
            "name": "TotalExpedite",
            "expression": " SUM(FactShipment[IsExpedited])",
            "formatString": "#,0",
            "displayFolder": "Shipments\\Expedite"
          },
          {
            "name": "ExpediteYTD",
            "expression": " TotalYTD([TotalExpedite],'DateTable'[Date])",
            "formatString": "#,0",
            "displayFolder": "Shipments\\Expedite"
          },
          {
            "name": "ExpediteSamePeriod LastYear",
            "expression": [
              " ",
              "CALCULATE",
              "(  [ExpediteYTD],",
              "    SAMEPERIODLASTYEAR('DateTable'[Date])",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Expedite"
          },
          {
            "name": "ExpediteOfShipmentCount%",
            "expression": " DIVIDE([ExpediteYTD],[ShipmentTotal])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Expedite"
          },
          {
            "name": "Expedite%SelectedPeriod",
            "expression": " DIVIDE([calcExpediteShipments],[ShipmentTotal])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Expedite"
          },
          {
            "name": "Expedite%",
            "expression": " DIVIDE([ExpediteYTD],[ShipmentsYTD])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Expedite"
          },
          {
            "name": "Expedite YoY",
            "expression": [
              " ",
              "IF(ISBLANK([ExpediteSamePeriod LastYear]),blank(),[ExpediteYTD] - [ExpediteSamePeriod LastYear])"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Expedite"
          },
          {
            "name": "Expedite Growth %",
            "expression": " DIVIDE([Expedite YoY],[ExpediteSamePeriod LastYear])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Expedite"
          },
          {
            "name": "TotalContracted",
            "expression": " [ShipmentTotal]-[TotalSpot]",
            "formatString": "#,0",
            "displayFolder": "Shipments\\Contracted"
          },
          {
            "name": "ContractedYTD",
            "expression": " TotalYTD([TotalContracted],'DateTable'[Date])",
            "formatString": "#,0",
            "displayFolder": "Shipments\\Contracted"
          },
          {
            "name": "ContractedSamePeriod LastYear",
            "expression": [
              " ",
              "CALCULATE",
              "(  [ContractedYTD],",
              "    SAMEPERIODLASTYEAR('DateTable'[Date])",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Contracted"
          },
          {
            "name": "Contracted%SelectedPeriod",
            "expression": " DIVIDE([calcContractedShipments],[ShipmentTotal])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Contracted"
          },
          {
            "name": "Contracted %",
            "expression": " DIVIDE([ContractedYTD],[ShipmentsYTD])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Contracted"
          },
          {
            "name": "ShipmentsWithOrdConsolidationYTD",
            "expression": " TotalYTD([calcShipmentsWithOrdersConsolidated],'DateTable'[Date])",
            "formatString": "#,0",
            "displayFolder": "Shipments\\Consolidation"
          },
          {
            "name": "ShipmentsWithOrdConsolidationSamePeriod LY",
            "expression": [
              " ",
              "CALCULATE",
              "(  [ShipmentsWithOrdConsolidationYTD],",
              "    SAMEPERIODLASTYEAR('DateTable'[Date])",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Consolidation"
          },
          {
            "name": "ShipmentsWithOrdConsolidation YoY",
            "expression": [
              " ",
              "IF(ISBLANK([ShipmentsWithOrdConsolidationSamePeriod LY]),blank(),[ShipmentsWithOrdConsolidationYTD] - [ShipmentsWithOrdConsolidationSamePeriod LY])"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Consolidation"
          },
          {
            "name": "ShipmentCountR3MAvg",
            "expression": [
              " ",
              "VAR NumOfMonths = 3",
              "VAR LastCurrentDate =",
              "   EOMONTH ( TODAY (), -1 )",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfMonths, MONTH )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[YearMonthnumber] ), ",
              "            [ShipmentTotal]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "  "
            ],
            "formatString": "#,0",
            "displayFolder": "RollingAvgAcrossTime"
          },
          {
            "name": "ShipmentCount6MAvg",
            "expression": [
              " ",
              "VAR NumOfMonths = 6",
              "VAR LastCurrentDate =",
              "  MAX ( 'DateTable'[Date] )",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfMonths, MONTH )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[YearMonthnumber] ), ",
              "            [ShipmentTotal]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "  "
            ],
            "formatString": "#,0",
            "displayFolder": "RollingAvgAcrossTime"
          },
          {
            "name": "ShipmentCountR13MAvg",
            "expression": [
              " ",
              "VAR NumOfMonths = 13",
              "VAR LastCurrentDate =",
              "   MAX ( 'DateTable'[Date] )",
              "",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfMonths, MONTH )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[YearMonthnumber] ), ",
              "            [ShipmentTotal]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "  "
            ],
            "formatString": "#,0",
            "displayFolder": "RollingAvgAcrossTime"
          },
          {
            "name": "OrderCount3MAvg",
            "expression": [
              " ",
              "VAR NumOfMonths = 3",
              "VAR LastCurrentDate =",
              "    EOMONTH ( TODAY (), -1 )",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfMonths, MONTH )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[YearMonthnumber] ), ",
              "            [OrderTotal]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "  "
            ],
            "formatString": "#,0",
            "displayFolder": "RollingAvgAcrossTime"
          },
          {
            "name": "OrderCount6MAvg",
            "expression": [
              " ",
              "VAR NumOfMonths = 6",
              "VAR LastCurrentDate =",
              "   MAX ( 'DateTable'[Date] )",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfMonths, MONTH )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[YearMonthnumber] ), ",
              "            [OrderTotal]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "  "
            ],
            "formatString": "#,0",
            "displayFolder": "RollingAvgAcrossTime"
          },
          {
            "name": "OrderCount13MAvg",
            "expression": [
              " ",
              "VAR NumOfMonths = 13",
              "VAR LastCurrentDate =",
              "    MAX ( 'DateTable'[Date] )",
              "",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfMonths, MONTH )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[YearMonthnumber] ), ",
              "            [OrderTotal]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "  "
            ],
            "formatString": "#,0",
            "displayFolder": "RollingAvgAcrossTime"
          },
          {
            "name": "ShipmentStoplight",
            "expression": " [ShipmentTotal] - [ShipmentCountR13MAvg]",
            "displayFolder": "Shipments\\Spotlight"
          },
          {
            "name": "OrdNotConsolidation %",
            "expression": " DIVIDE([calcShipmentsWithOrdersNotConsolidated], [ShipmentTotal])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Consolidation"
          },
          {
            "name": "OrdConsolidationYTD %",
            "expression": " DIVIDE([ShipmentsWithOrdConsolidationYTD], [ShipmentsYTD])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Consolidation"
          },
          {
            "name": "OrdConsolidationLYTD %",
            "expression": " DIVIDE([ShipmentsWithOrdConsolidationSamePeriod LY], [ShipmentsSamePeriod LastYear])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Consolidation"
          },
          {
            "name": "OrdConsolidation%",
            "expression": " DIVIDE([calcShipmentsWithOrdersConsolidated], [ShipmentTotal])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Consolidation"
          },
          {
            "name": "FUMYTD",
            "expression": " TotalYTD([TotalFUM],'DateTable'[Date])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "FUM\\Overall FUM MTDYTD",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "FUMMTD",
            "expression": " TotalMTD([TotalFUM],'DateTable'[Date])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "FUM\\Overall FUM MTDYTD",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "FUMQTD",
            "expression": " TotalQTD([TotalFUM],'DateTable'[Date])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "FUM\\Overall FUM MTDYTD",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "FUMSamePeriod LastYear",
            "expression": [
              " ",
              "CALCULATE",
              "(  [FUMYTD],",
              "    SAMEPERIODLASTYEAR('DateTable'[Date])",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "FUM\\Overall FUM MTDYTD",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "FUMSamePeriod LastYear MTD",
            "expression": [
              " ",
              "CALCULATE",
              "(  [FUMMTD],",
              "    SAMEPERIODLASTYEAR('DateTable'[Date])",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "FUM\\Overall FUM MTDYTD",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "FUMSamePeriod LastYear QTD",
            "expression": [
              " ",
              "CALCULATE",
              "(  [FUMQTD],",
              "    SAMEPERIODLASTYEAR('DateTable'[Date])",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "FUM\\Overall FUM MTDYTD",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "FUM YoY",
            "expression": [
              " ",
              "IF(ISBLANK([FUMSamePeriod LastYear]),blank(),[FUMYTD] - [FUMSamePeriod LastYear])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "FUM\\Overall FUM MTDYTD",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "FUM Growth %",
            "expression": " DIVIDE([FUM YoY],[FUMSamePeriod LastYear])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "FUM\\Overall FUM MTDYTD"
          },
          {
            "name": "FUM MoM",
            "expression": [
              " ",
              "IF(ISBLANK([FUMSamePeriod LastYear MTD]),blank(),[FUMMTD] - [FUMSamePeriod LastYear MTD])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "FUM\\Overall FUM MTDYTD",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "FUM QoQ",
            "expression": [
              " ",
              "IF(ISBLANK([FUMSamePeriod LastYear QTD]),blank(),[FUMQTD] - [FUMSamePeriod LastYear QTD])"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "FUM\\Overall FUM MTDYTD",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "FUMYTDExpeditedOnly",
            "expression": " CALCULATE([FUMYTD],'FactShipment'[IsExpedited] == 1)",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "FUM\\Overall FUM MTDYTD",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "FUM13MAvg",
            "expression": [
              " ",
              "VAR NumOfMonths = 13",
              "VAR LastCurrentDate =",
              "    MAX ( 'DateTable'[Date] )",
              "",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfMonths, MONTH )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[YearMonthnumber] ), ",
              "            [TotalFUM]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "  "
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "RollingAvgAcrossTime",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "FUM30DAvg",
            "expression": [
              " ",
              "VAR NumOfDays = 30",
              "VAR LastCurrentDate =",
              "    MAX ( 'DateTable'[Date] )",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfDays, DAY )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[Date] ), ",
              "            [TotalFUM]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "  "
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "RollingAvgAcrossTime",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "FUMStoplight",
            "expression": " [TotalFUM] - [FUM13MAvg]",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "FUM\\Spotlight",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "calcTLShipments",
            "expression": [
              " ",
              "CALCULATE(",
              "    [ShipmentTotal],",
              "    KEEPFILTERS('FactShipment'[ModeNumber] = \"TL\")",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Mode"
          },
          {
            "name": "calcLTLShipments",
            "expression": [
              " ",
              "CALCULATE(",
              "    [ShipmentTotal],",
              "    KEEPFILTERS('FactShipment'[ModeNumber] = \"LTL\")",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Shipments\\Mode"
          },
          {
            "name": "calcTL%",
            "expression": " DIVIDE([calcTLShipments], [ShipmentTotal])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Mode"
          },
          {
            "name": "calcLTL%",
            "expression": " DIVIDE([calcLTLShipments], [ShipmentTotal])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Shipments\\Mode"
          },
          {
            "name": "CPM6MAvg",
            "expression": [
              " ",
              "VAR NumOfMonths = 6",
              "VAR LastCurrentDate = ",
              "      MAX ( 'DateTable'[Date] )",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfMonths, MONTH )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[YearMonthnumber] ), ",
              "            [calcCPM]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              ""
            ],
            "formatString": "0.00",
            "displayFolder": "RollingAvgAcrossTime"
          },
          {
            "name": "CPP6MAvg",
            "expression": [
              " ",
              "VAR NumOfMonths = 6",
              "VAR LastCurrentDate =",
              "    MAX ( 'DateTable'[Date] )",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfMonths, MONTH )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[YearMonthnumber] ), ",
              "            [calcCPP]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "",
              "  "
            ],
            "formatString": "0.00",
            "displayFolder": "RollingAvgAcrossTime"
          },
          {
            "name": "CPPallet6MAvg",
            "expression": [
              " ",
              "VAR NumOfMonths = 6",
              "VAR LastCurrentDate =",
              "    MAX ( 'DateTable'[Date] )",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfMonths, MONTH )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[YearMonthnumber] ), ",
              "            [calcCPPallet]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "  ",
              ""
            ],
            "formatString": "0.00",
            "displayFolder": "RollingAvgAcrossTime"
          },
          {
            "name": "FUM6MAvg",
            "expression": [
              " ",
              "VAR NumOfMonths = 6",
              "VAR LastCurrentDate =",
              "    MAX ( 'DateTable'[Date] )",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfMonths, MONTH )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[YearMonthnumber] ), ",
              "            [TotalFUM]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "RollingAvgAcrossTime",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "FUM3MAvg",
            "expression": [
              " ",
              "VAR NumOfMonths = 3",
              "VAR LastCurrentDate =",
              "    EOMONTH ( TODAY (), -1 )",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfMonths, MONTH )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[YearMonthnumber] ), ",
              "            [TotalFUM]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "  "
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "displayFolder": "RollingAvgAcrossTime",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "ShipmentCount30DAvg",
            "expression": [
              " ",
              "VAR NumOfDays = 30",
              "VAR LastCurrentDate =",
              "    MAX ( 'DateTable'[Date] )",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfDays, DAY )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[Date] ), ",
              "            [ShipmentTotal]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "  "
            ],
            "formatString": "0"
          },
          {
            "name": "ShipmentCount60DAvg",
            "expression": [
              " ",
              "VAR NumOfDays = 60",
              "VAR LastCurrentDate =",
              "    MAX ( 'DateTable'[Date] )",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfDays, DAY )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[Date] ), ",
              "            [ShipmentTotal]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "  "
            ],
            "formatString": "0"
          },
          {
            "name": "ShipmentCount90DAvg",
            "expression": [
              " ",
              "VAR NumOfDays = 90",
              "VAR LastCurrentDate =",
              "    MAX ( 'DateTable'[Date] )",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfDays, DAY )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[Date] ), ",
              "            [ShipmentTotal]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "  "
            ],
            "formatString": "0"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "-- Last Modified : 4-21-2023 [RK]",
              "",
              "--Name : MT Executive Dashboard",
              "--Report Description : Shipment count and FUM from NextGenDW.",
              "--Note: Include BlendedAPCost",
              "-- Any shipment with total BlendedAPCost > $700,000 has been excluded from the FUM and shipment count charts in this report. The value of $700,000 has been considered to align with the upper limit of air charter shipments.",
              "--=======================================",
              "",
              "DECLARE @InsertStartDate date  = DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)) --'3/22/2023' ",
              "DECLARE @InsertEndDate   date = GETDATE()",
              "------------------------------------=====-",
              "",
              "IF OBJECT_ID('tempdb..#ShipmentInterest') IS NOT NULL DROP TABLE #ShipmentInterest",
              "SELECT  cust.CustomerKey,Shp.ShipmentKey,Shp.ShipmentID,CAST(Shp.StartDateLocal AS DATE) AS StartDateLocal",
              "INTO   #ShipmentInterest",
              "FROM\tUsrRpt.DimShipment Shp  ",
              "JOIN UsrRpt.DimCustomer cust ON Shp.DomainName = cust.DomainName",
              "WHERE  CAST(Shp.StartDateLocal AS DATE) BETWEEN @InsertStartDate AND @InsertEndDate ",
              "AND Shp.AP_AR = 'AP'  ",
              "--AND Shp.DomainName IN ('MENLO/A200') -- 28 Dow Only for Testing.",
              "--AND Shp.DomainName IN ('OTM/A031','OTM/A042','MENLO/A200','OTM/A052','OTM/A053') -- 35 Grainger, 28 Dow, 50 Baker, 72 Sch, 73 Zappos",
              "",
              "CREATE NONCLUSTERED INDEX ix_ShpId ON #ShipmentInterest(ShipmentKey)",
              "--Select count(1) from #ShipmentInterest --2,412,201 rows",
              "--Select * from #ShipmentInterest",
              "---------------------------------------------------------------------- ",
              "",
              "IF OBJECT_ID('tempdb..#ShipmentDetails') IS NOT NULL DROP TABLE #ShipmentDetails",
              "SELECT F.ShipmentKey,S.ShipmentID,F.CustomerKey,S.StartDateLocal,dt.DateKey As StartDateKey",
              "\t ,DC.CarrierKey, DC.CarrierNumber,DC.CarrierName,DSI.IsXPOManaged, DSI.IsExpedited, DSI.IsSpot, DM.ModeKey, DM.ModeNumber",
              "\t ,F.LaneKey",
              "\t ,[Pallets] = F.[Pallets]",
              "\t ,[Distance] = cast(F.[LoadedDistance] as decimal (10,2))     ",
              "\t ,[Weight]\t= cast(F.[GrossWeight] as decimal(15,2)) ",
              "\t ,[OrderConsolidation] = cast(ds.NumberOfOrders as int)  ",
              "\t ,F.SourceLocationKey",
              "\t ,F.DestinationLocationKey",
              "\t  ",
              "INTO #ShipmentDetails",
              "FROM #ShipmentInterest S INNER JOIN UsrRpt.FactShipment F WITH(NOLOCK) ON S.ShipmentKey = F.ShipmentKey ",
              "                         INNER JOIN UsrRpt.DimCarrier DC WITH(NOLOCK) ON DC.CarrierKey = F.CarrierKey",
              "\t\t\t\t\t\t INNER JOIN UsrRpt.DimMode dm WITH(NOLOCK) ON F.ModeKey = dm.ModeKey -- [RK] actual mode, there is a different field for planned mode.",
              "\t\t\t\t\t\t INNER JOIN UsrRpt.DimShipment DS WITH(NOLOCK) ON S.ShipmentKey = DS.ShipmentKey ",
              "\t\t\t\t         INNER JOIN UsrRpt.DimShipmentIndicator DSI WITH(NOLOCK) ON S.ShipmentKey = DSI.ShipmentKey",
              "\t\t\t\t\t\t JOIN UsrRpt.DimDate dt ON S.StartDateLocal = dt.Date",
              "WHERE DSI.IsXPOManaged =1 AND dc.CarrierNumber NOT IN ('DBID', 'DCHG', 'MLOG','WICO') -- Only managed business matters, plus remove dummy scac.\t\t\t\t\t  \t\t",
              "CREATE NONCLUSTERED INDEX ix_ShipmentKey ON #ShipmentDetails(ShipmentKey,CustomerKey)",
              "--Select Top 100* from #ShipmentDetails --2,412,205 rows",
              "",
              "--------------------------------------------------------------",
              "",
              "IF OBJECT_ID('tempdb..#Finance') IS NOT NULL DROP TABLE #Finance",
              "SELECT   SUM(ISNULL(F.BlendedAPCost,0)) AS BlendedAPCost,F.CustomerKey,F.ShipmentKey,S.ShipmentID",
              "\t    ,S.IsXPOManaged,S.StartDateLocal,S.StartDateKey, S.CarrierKey, S.CarrierNumber,S.CarrierName,S.IsExpedited, S.IsSpot, S.ModeKey, S.ModeNumber ",
              "\t\t,Ln.[LaneCity] ,Ln.[LaneZip3] ,Ln.[LaneZip5] ,Ln.[LaneState]",
              "\t\t,S.[Pallets],S.[Distance],S.[Weight],S.[OrderConsolidation]",
              "\t\t,S.SourceLocationKey",
              "\t\t,S.DestinationLocationKey",
              "\t\t",
              "INTO #Finance ",
              "FROM UsrRpt.FactFinance F WITH (NOLOCK) ",
              "\tINNER JOIN #ShipmentDetails S  ON  S.ShipmentKey = F.ShipmentKey",
              "\tLEFT JOIN UsrRpt.DimLane Ln ON S.LaneKey = Ln.LaneKey",
              "GROUP BY F.CustomerKey,F.ShipmentKey,S.ShipmentID,S.IsXPOManaged,S.StartDateLocal,S.StartDateKey,S.CarrierNumber",
              "\t\t ,S.CarrierKey,S.CarrierName,S.IsExpedited, S.IsSpot, S.ModeKey, S.ModeNumber",
              "\t\t,Ln.LaneCity,Ln.LaneZip3,Ln.LaneZip5,Ln.LaneState",
              "\t\t,S.[Pallets],S.[Distance],S.[Weight],S.[OrderConsolidation],S.SourceLocationKey,S.DestinationLocationKey",
              "HAVING SUM(ISNULL(F.BlendedAPCost,0)) < 700000 ",
              "",
              "CREATE NONCLUSTERED INDEX ic_ShipmentKey ON #Finance(ShipmentKey,CustomerKey)",
              "--Select * From #Finance  --2,412,201 rows",
              "",
              "------------------------------------------------",
              "-- Calculate othet Shipment Level aggregates here.",
              "IF OBJECT_ID('tempdb..#FinanceCostIndicators') IS NOT NULL DROP TABLE #FinanceCostIndicators",
              "Select ",
              "\t  BlendedAPCost, CustomerKey, ShipmentKey, ShipmentID",
              "\t ,Cast(IsXPOManaged as Int) AS IsManaged",
              "\t ,Cast(IsExpedited as Int) AS IsExpedited",
              "\t ,Cast(IsSpot as Int) AS IsSpot",
              "\t ,StartDateLocal,StartDateKey, CarrierKey, CarrierNumber,CarrierName",
              "\t ,ModeKey,ModeNumber, LaneCity,LaneZip3,LaneZip5,LaneState",
              "\t ,Pallets, Distance, [Weight]",
              "\t ,OrderConsolidation",
              "\t ,SourceLocationKey,DestinationLocationKey",
              "\t ,CASE WHEN OrderConsolidation > 1 THEN 'C'",
              "\t\t ELSE 'NC'",
              "\t  END AS [OrdConsolidationFlag] ",
              "\t ,BlendedAPCost/ NULLIF(Pallets, 0) AS [CPPallet]",
              "\t ,BlendedAPCost/ NULLIF(Distance, 0) AS [CPM]",
              "\t ,BlendedAPCost/ NULLIF([Weight], 0) AS [CPP]",
              "",
              "INTO #FinanceCostIndicators",
              "FROM #Finance ",
              "",
              "CREATE NONCLUSTERED INDEX ic_FinanceCostKey ON #FinanceCostIndicators(ShipmentKey,CustomerKey)",
              "--Select top 10* From #FinanceCostIndicators",
              "",
              "-------Final -------------------------------------------",
              "SELECT CustomerKey",
              "    ,COUNT(ShipmentID) AS ShipmentCount ",
              "\t,SUM(BlendedAPCost) AS BlendedAPCost",
              "\t,SUM([Pallets]) As TotalPallets",
              "\t,SUM([Distance]) As TotalDistance",
              "\t,Sum([Weight]) As [TotalWeight]",
              "\t,SUM([OrderConsolidation]) As [TotalOrderConsolidation] ",
              "\t,Avg([CPPallet]) As [AvgCPPallet]",
              "\t,Avg([CPM]) As [AvgCPM]",
              "\t,Avg([CPP]) As [AvgCPP]",
              "\t,IsManaged",
              "\t,IsExpedited",
              "\t,IsSpot",
              "\t,StartDateLocal",
              "\t,StartDateKey",
              "\t,CarrierKey",
              "\t,CarrierNumber, CarrierName",
              "\t,ModeKey, ModeNumber, LaneCity,LaneZip3,LaneZip5,LaneState",
              "\t,OrdConsolidationFlag",
              "\t,SourceLocationKey",
              "\t,DestinationLocationKey",
              "FROM  #FinanceCostIndicators",
              "GROUP BY CustomerKey,IsManaged, IsExpedited, IsSpot, StartDateLocal,StartDateKey, CarrierKey, CarrierNumber, CarrierName ,ModeKey, ModeNumber, LaneCity,LaneZip3,LaneZip5,LaneState,OrdConsolidationFlag, SourceLocationKey,DestinationLocationKey",
              "-- 645,916 rows - Grainger only"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "tblShipments"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Last Modified : 4-21-2023 [RK]",
              "",
              "--Name : MT Executive Dashboard",
              "--Report Description : Shipment count and FUM from NextGenDW.",
              "--Note: Include BlendedAPCost",
              "-- Any shipment with total BlendedAPCost > $700,000 has been excluded from the FUM and shipment count charts in this report. The value of $700,000 has been considered to align with the upper limit of air charter shipments.",
              "--=======================================",
              "",
              "DECLARE @InsertStartDate date  = DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)) --'3/22/2023' ",
              "DECLARE @InsertEndDate   date = GETDATE()",
              "------------------------------------=====-",
              "",
              "IF OBJECT_ID('tempdb..#ShipmentInterest') IS NOT NULL DROP TABLE #ShipmentInterest",
              "SELECT  cust.CustomerKey,Shp.ShipmentKey,Shp.ShipmentID,CAST(Shp.StartDateLocal AS DATE) AS StartDateLocal",
              "INTO   #ShipmentInterest",
              "FROM\tUsrRpt.DimShipment Shp  ",
              "JOIN UsrRpt.DimCustomer cust ON Shp.DomainName = cust.DomainName",
              "WHERE  CAST(Shp.StartDateLocal AS DATE) BETWEEN @InsertStartDate AND @InsertEndDate ",
              "AND Shp.AP_AR = 'AP'  ",
              "--AND Shp.DomainName IN ('MENLO/A200') -- 28 Dow Only for Testing.",
              "--AND Shp.DomainName IN ('OTM/A031','OTM/A042','MENLO/A200','OTM/A052','OTM/A053') -- 35 Grainger, 28 Dow, 50 Baker, 72 Sch, 73 Zappos",
              "",
              "CREATE NONCLUSTERED INDEX ix_ShpId ON #ShipmentInterest(ShipmentKey)",
              "--Select count(1) from #ShipmentInterest --2,412,201 rows",
              "--Select * from #ShipmentInterest",
              "---------------------------------------------------------------------- ",
              "",
              "IF OBJECT_ID('tempdb..#ShipmentDetails') IS NOT NULL DROP TABLE #ShipmentDetails",
              "SELECT F.ShipmentKey,S.ShipmentID,F.CustomerKey,S.StartDateLocal,dt.DateKey As StartDateKey",
              "\t ,DC.CarrierKey, DC.CarrierNumber,DC.CarrierName,DSI.IsXPOManaged, DSI.IsExpedited, DSI.IsSpot, DM.ModeKey, DM.ModeNumber",
              "\t ,F.LaneKey",
              "\t ,[Pallets] = F.[Pallets]",
              "\t ,[Distance] = cast(F.[LoadedDistance] as decimal (10,2))     ",
              "\t ,[Weight]\t= cast(F.[GrossWeight] as decimal(15,2)) ",
              "\t ,[OrderConsolidation] = cast(ds.NumberOfOrders as int)  ",
              "\t ,F.SourceLocationKey",
              "\t ,F.DestinationLocationKey",
              "\t  ",
              "INTO #ShipmentDetails",
              "FROM #ShipmentInterest S INNER JOIN UsrRpt.FactShipment F WITH(NOLOCK) ON S.ShipmentKey = F.ShipmentKey ",
              "                         INNER JOIN UsrRpt.DimCarrier DC WITH(NOLOCK) ON DC.CarrierKey = F.CarrierKey",
              "\t\t\t\t\t\t INNER JOIN UsrRpt.DimMode dm WITH(NOLOCK) ON F.ModeKey = dm.ModeKey -- [RK] actual mode, there is a different field for planned mode.",
              "\t\t\t\t\t\t INNER JOIN UsrRpt.DimShipment DS WITH(NOLOCK) ON S.ShipmentKey = DS.ShipmentKey ",
              "\t\t\t\t         INNER JOIN UsrRpt.DimShipmentIndicator DSI WITH(NOLOCK) ON S.ShipmentKey = DSI.ShipmentKey",
              "\t\t\t\t\t\t JOIN UsrRpt.DimDate dt ON S.StartDateLocal = dt.Date",
              "WHERE DSI.IsXPOManaged =1 AND dc.CarrierNumber NOT IN ('DBID', 'DCHG', 'MLOG','WICO') -- Only managed business matters, plus remove dummy scac.\t\t\t\t\t  \t\t",
              "CREATE NONCLUSTERED INDEX ix_ShipmentKey ON #ShipmentDetails(ShipmentKey,CustomerKey)",
              "--Select Top 100* from #ShipmentDetails --2,412,205 rows",
              "",
              "--------------------------------------------------------------",
              "",
              "IF OBJECT_ID('tempdb..#Finance') IS NOT NULL DROP TABLE #Finance",
              "SELECT   SUM(ISNULL(F.BlendedAPCost,0)) AS BlendedAPCost,F.CustomerKey,F.ShipmentKey,S.ShipmentID",
              "\t    ,S.IsXPOManaged,S.StartDateLocal,S.StartDateKey, S.CarrierKey, S.CarrierNumber,S.CarrierName,S.IsExpedited, S.IsSpot, S.ModeKey, S.ModeNumber ",
              "\t\t,Ln.[LaneCity] ,Ln.[LaneZip3] ,Ln.[LaneZip5] ,Ln.[LaneState]",
              "\t\t,S.[Pallets],S.[Distance],S.[Weight],S.[OrderConsolidation]",
              "\t\t,S.SourceLocationKey",
              "\t\t,S.DestinationLocationKey",
              "\t\t",
              "INTO #Finance ",
              "FROM UsrRpt.FactFinance F WITH (NOLOCK) ",
              "\tINNER JOIN #ShipmentDetails S  ON  S.ShipmentKey = F.ShipmentKey",
              "\tLEFT JOIN UsrRpt.DimLane Ln ON S.LaneKey = Ln.LaneKey",
              "GROUP BY F.CustomerKey,F.ShipmentKey,S.ShipmentID,S.IsXPOManaged,S.StartDateLocal,S.StartDateKey,S.CarrierNumber",
              "\t\t ,S.CarrierKey,S.CarrierName,S.IsExpedited, S.IsSpot, S.ModeKey, S.ModeNumber",
              "\t\t,Ln.LaneCity,Ln.LaneZip3,Ln.LaneZip5,Ln.LaneState",
              "\t\t,S.[Pallets],S.[Distance],S.[Weight],S.[OrderConsolidation],S.SourceLocationKey,S.DestinationLocationKey",
              "HAVING SUM(ISNULL(F.BlendedAPCost,0)) < 700000 ",
              "",
              "CREATE NONCLUSTERED INDEX ic_ShipmentKey ON #Finance(ShipmentKey,CustomerKey)",
              "--Select * From #Finance  --2,412,201 rows",
              "",
              "------------------------------------------------",
              "-- Calculate othet Shipment Level aggregates here.",
              "IF OBJECT_ID('tempdb..#FinanceCostIndicators') IS NOT NULL DROP TABLE #FinanceCostIndicators",
              "Select ",
              "\t  BlendedAPCost, CustomerKey, ShipmentKey, ShipmentID",
              "\t ,Cast(IsXPOManaged as Int) AS IsManaged",
              "\t ,Cast(IsExpedited as Int) AS IsExpedited",
              "\t ,Cast(IsSpot as Int) AS IsSpot",
              "\t ,StartDateLocal,StartDateKey, CarrierKey, CarrierNumber,CarrierName",
              "\t ,ModeKey,ModeNumber, LaneCity,LaneZip3,LaneZip5,LaneState",
              "\t ,Pallets, Distance, [Weight]",
              "\t ,OrderConsolidation",
              "\t ,SourceLocationKey,DestinationLocationKey",
              "\t ,CASE WHEN OrderConsolidation > 1 THEN 'C'",
              "\t\t ELSE 'NC'",
              "\t  END AS [OrdConsolidationFlag] ",
              "\t ,BlendedAPCost/ NULLIF(Pallets, 0) AS [CPPallet]",
              "\t ,BlendedAPCost/ NULLIF(Distance, 0) AS [CPM]",
              "\t ,BlendedAPCost/ NULLIF([Weight], 0) AS [CPP]",
              "",
              "INTO #FinanceCostIndicators",
              "FROM #Finance ",
              "",
              "CREATE NONCLUSTERED INDEX ic_FinanceCostKey ON #FinanceCostIndicators(ShipmentKey,CustomerKey)",
              "--Select top 10* From #FinanceCostIndicators",
              "",
              "-------Final -------------------------------------------",
              "SELECT CustomerKey",
              "    ,COUNT(ShipmentID) AS ShipmentCount ",
              "\t,SUM(BlendedAPCost) AS BlendedAPCost",
              "\t,SUM([Pallets]) As TotalPallets",
              "\t,SUM([Distance]) As TotalDistance",
              "\t,Sum([Weight]) As [TotalWeight]",
              "\t,SUM([OrderConsolidation]) As [TotalOrderConsolidation] ",
              "\t,Avg([CPPallet]) As [AvgCPPallet]",
              "\t,Avg([CPM]) As [AvgCPM]",
              "\t,Avg([CPP]) As [AvgCPP]",
              "\t,IsManaged",
              "\t,IsExpedited",
              "\t,IsSpot",
              "\t,StartDateLocal",
              "\t,StartDateKey",
              "\t,CarrierKey",
              "\t,CarrierNumber, CarrierName",
              "\t,ModeKey, ModeNumber, LaneCity,LaneZip3,LaneZip5,LaneState",
              "\t,OrdConsolidationFlag",
              "\t,SourceLocationKey",
              "\t,DestinationLocationKey",
              "FROM  #FinanceCostIndicators",
              "GROUP BY CustomerKey,IsManaged, IsExpedited, IsSpot, StartDateLocal,StartDateKey, CarrierKey, CarrierNumber, CarrierName ,ModeKey, ModeNumber, LaneCity,LaneZip3,LaneZip5,LaneState,OrdConsolidationFlag, SourceLocationKey,DestinationLocationKey",
              "-- 645,916 rows - Grainger only</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DateTable",
        "dataCategory": "Time",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Date",
            "dataType": "dateTime",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "isKey": true,
            "sourceColumn": "[Date]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "DateAsInteger",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[DateAsInteger]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Day",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Day]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Month",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Month]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Year",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Year]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Monthnumber",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Monthnumber]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "YearMonthnumberInt",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[YearMonthnumberInt]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "MonthYear",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[MonthYear]",
            "sortByColumn": "YearMonthnumberInt"
          },
          {
            "type": "calculatedTableColumn",
            "name": "YearMonthShort",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[YearMonthShort]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "MonthNameShort",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[MonthNameShort]",
            "sortByColumn": "Monthnumber"
          },
          {
            "type": "calculatedTableColumn",
            "name": "MonthNameLong",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[MonthNameLong]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "DayOfWeekNumber",
            "dataType": "int64",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[DayOfWeekNumber]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "DayOfWeek",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[DayOfWeek]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "DayOfWeekShort",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[DayOfWeekShort]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Quarter",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Quarter]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "YearQuarter",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[YearQuarter]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "YearMonthnumber",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[YearMonthnumber]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                " ",
                "ADDCOLUMNS (",
                "CALENDAR (DATE(2022,1,1), TODAY()),",
                "\"DateAsInteger\", FORMAT ( [Date], \"YYYYMMDD\" ),",
                "\"Day\", DAY( [Date] ),",
                "\"Month\", MONTH( [Date] ),",
                "\"Year\", YEAR ( [Date] ), ",
                "\"Monthnumber\", FORMAT ( [Date], \"MM\" ),",
                "\"YearMonthnumber\", FORMAT ( [Date], \"YYYY/MM\" ),",
                "\"YearMonthnumberInt\", FORMAT ( [Date], \"YYYYMM\"),",
                "\"MonthYear\", FORMAT ( [Date], \"MM/YY\"),",
                "\"YearMonthShort\", FORMAT ( [Date], \"YYYY/mmm\" ),",
                "\"MonthNameShort\", FORMAT ( [Date], \"mmm\" ),",
                "\"MonthNameLong\", FORMAT ( [Date], \"mmmm\" ),",
                "\"DayOfWeekNumber\", WEEKDAY ( [Date] ),",
                "\"DayOfWeek\", FORMAT ( [Date], \"dddd\" ),",
                "\"DayOfWeekShort\", FORMAT ( [Date], \"ddd\" ),",
                "\"Quarter\", \"Q\" & FORMAT ( [Date], \"Q\" ),",
                "\"YearQuarter\", FORMAT ( [Date], \"YYYY\" ) & \"/Q\" & FORMAT ( [Date], \"Q\" )",
                ")"
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Date Hierarchy",
            "levels": [
              {
                "name": "Year",
                "ordinal": 0,
                "column": "Year"
              },
              {
                "name": "Quarter",
                "ordinal": 1,
                "column": "Quarter"
              },
              {
                "name": "Month",
                "ordinal": 2,
                "column": "MonthNameShort"
              },
              {
                "name": "Date",
                "ordinal": 3,
                "column": "Date"
              }
            ]
          }
        ]
      },
      {
        "name": "FactOnTimePerformance",
        "columns": [
          {
            "name": "OnTimePerformanceKey",
            "dataType": "int64",
            "sourceColumn": "OnTimePerformanceKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "ModeKey",
            "dataType": "int64",
            "sourceColumn": "ModeKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "CarrierKey",
            "dataType": "int64",
            "sourceColumn": "CarrierKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "CustomerKey",
            "dataType": "int64",
            "sourceColumn": "CustomerKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "ShipmentKey",
            "dataType": "int64",
            "sourceColumn": "ShipmentKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "DestinationLocationKey",
            "dataType": "int64",
            "sourceColumn": "DestinationLocationKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "SourceLocationKey",
            "dataType": "int64",
            "sourceColumn": "SourceLocationKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "StartDateLocalKey",
            "dataType": "int64",
            "sourceColumn": "StartDateLocalKey",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "IsLate",
            "dataType": "boolean",
            "sourceColumn": "IsLate",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "IsExclusion",
            "dataType": "boolean",
            "sourceColumn": "IsExclusion",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "sourceProviderType": "Boolean"
          },
          {
            "name": "EventTypeKey",
            "dataType": "int64",
            "sourceColumn": "EventTypeKey",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "FactOnTimePerformance",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "-- Last Modified : 4-21-2023 [RK]",
                "-- OnTimePerformance -- ",
                "-------------------------------------",
                "",
                "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
                "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
                "",
                ";",
                "SELECT [OnTimePerformanceKey]",
                " ,[ModeKey]  ",
                "      ,[CarrierKey]     ",
                "      ,[CustomerKey]",
                "      ,[ShipmentKey]    ",
                "      ,[DestinationLocationKey]     ",
                "      ,[SourceLocationKey]",
                "      ,[StartDateLocalKey]     ",
                "\t  ,dt.[Date] ",
                "      ,[IsLate2] AS [IsLate]",
                "      ,[IsExclusion]      ",
                "      ,[EventTypeKey]",
                "     ",
                "  FROM [UsrRpt].[FactOnTimePerformance] F WITH ( NOLOCK )",
                "  JOIN [UsrRpt].[DimDate] dt ON F.StartDateLocalKey = dt.DateKey",
                "   ",
                "  WHERE  1=1",
                "  --AND CustomerKey IN (28) -- Dow only",
                "  --AND CustomerKey IN (35, 28, 50,72,73) -- new ones",
                "  AND [StartDateLocalKey]>=@StartDate",
                "  AND [StartDateLocalKey]<=@EndDate",
                "  AND [StopSequence]=1",
                "  AND [EventTypeKey] IN (216,218) --'X3' --actual arrive at pickup, 'X1' --actual arrive at delivery"
              ],
              "dataSource": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Last Modified : 4-21-2023 [RK]",
                  "-- OnTimePerformance -- ",
                  "-------------------------------------",
                  "",
                  "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
                  "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
                  "",
                  ";",
                  "SELECT [OnTimePerformanceKey]",
                  " ,[ModeKey]  ",
                  "      ,[CarrierKey]     ",
                  "      ,[CustomerKey]",
                  "      ,[ShipmentKey]    ",
                  "      ,[DestinationLocationKey]     ",
                  "      ,[SourceLocationKey]",
                  "      ,[StartDateLocalKey]     ",
                  "\t  ,dt.[Date] ",
                  "      ,[IsLate2] AS [IsLate]",
                  "      ,[IsExclusion]      ",
                  "      ,[EventTypeKey]",
                  "     ",
                  "  FROM [UsrRpt].[FactOnTimePerformance] F WITH ( NOLOCK )",
                  "  JOIN [UsrRpt].[DimDate] dt ON F.StartDateLocalKey = dt.DateKey",
                  "   ",
                  "  WHERE  1=1",
                  "  --AND CustomerKey IN (28) -- Dow only",
                  "  --AND CustomerKey IN (35, 28, 50,72,73) -- new ones",
                  "  AND [StartDateLocalKey]>=@StartDate",
                  "  AND [StartDateLocalKey]<=@EndDate",
                  "  AND [StopSequence]=1",
                  "  AND [EventTypeKey] IN (216,218) --'X3' --actual arrive at pickup, 'X1' --actual arrive at delivery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "calcOTPEvents",
            "expression": [
              " ",
              "CALCULATE",
              "( ",
              "    COUNTROWS( FactOnTimePerformance ) ",
              ",   FILTER( ALL( FactOnTimePerformance[IsExclusion] ) ",
              "         , FactOnTimePerformance[IsExclusion] =  FALSE ",
              "          ) ",
              ")",
              ""
            ],
            "formatString": "#,0",
            "displayFolder": "OTP\\FirstLevel"
          },
          {
            "name": "calcOnTimeEvents",
            "expression": [
              " ",
              "CALCULATE(",
              "     COUNTROWS( FactOnTimePerformance ) , ",
              "    FILTER",
              "    ( ALL( FactOnTimePerformance[IsLate] , FactOnTimePerformance[IsExclusion] ) ",
              "    ,FactOnTimePerformance[IsLate] = False && FactOnTimePerformance[IsExclusion] = False ",
              "    ) ",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "OTP\\FirstLevel"
          },
          {
            "name": "calcOnTimeEvent%",
            "expression": " IF(ISBLANK([calcOnTimeEvents]),\"N/A\", DIVIDE( [calcOnTimeEvents] , [calcOTPEvents] ))",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "OTP\\FirstLevel"
          },
          {
            "name": "calcOnTimePickup%",
            "expression": " CALCULATE( [calcOnTimeEvent%] , FILTER(DimEventType , DimEventType[EventTypeNumber] = \"X3\" ) )",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "OTP\\FirstLevel"
          },
          {
            "name": "calcOnTimeDelivery%",
            "expression": " CALCULATE( [calcOnTimeEvent%] , FILTER(DimEventType , DimEventType[EventTypeNumber] = \"X1\" ) )",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "OTP\\FirstLevel"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "-- Last Modified : 4-21-2023 [RK]",
              "-- OnTimePerformance -- ",
              "-------------------------------------",
              "",
              "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
              "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
              "",
              ";",
              "SELECT [OnTimePerformanceKey]",
              " ,[ModeKey]  ",
              "      ,[CarrierKey]     ",
              "      ,[CustomerKey]",
              "      ,[ShipmentKey]    ",
              "      ,[DestinationLocationKey]     ",
              "      ,[SourceLocationKey]",
              "      ,[StartDateLocalKey]     ",
              "\t  ,dt.[Date] ",
              "      ,[IsLate2] AS [IsLate]",
              "      ,[IsExclusion]      ",
              "      ,[EventTypeKey]",
              "     ",
              "  FROM [UsrRpt].[FactOnTimePerformance] F WITH ( NOLOCK )",
              "  JOIN [UsrRpt].[DimDate] dt ON F.StartDateLocalKey = dt.DateKey",
              "   ",
              "  WHERE  1=1",
              "  --AND CustomerKey IN (28) -- Dow only",
              "  --AND CustomerKey IN (35, 28, 50,72,73) -- new ones",
              "  AND [StartDateLocalKey]>=@StartDate",
              "  AND [StartDateLocalKey]<=@EndDate",
              "  AND [StopSequence]=1",
              "  AND [EventTypeKey] IN (216,218) --'X3' --actual arrive at pickup, 'X1' --actual arrive at delivery"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "FactOnTimePerformance"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Last Modified : 4-21-2023 [RK]",
              "-- OnTimePerformance -- ",
              "-------------------------------------",
              "",
              "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
              "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
              "",
              ";",
              "SELECT [OnTimePerformanceKey]",
              " ,[ModeKey]  ",
              "      ,[CarrierKey]     ",
              "      ,[CustomerKey]",
              "      ,[ShipmentKey]    ",
              "      ,[DestinationLocationKey]     ",
              "      ,[SourceLocationKey]",
              "      ,[StartDateLocalKey]     ",
              "\t  ,dt.[Date] ",
              "      ,[IsLate2] AS [IsLate]",
              "      ,[IsExclusion]      ",
              "      ,[EventTypeKey]",
              "     ",
              "  FROM [UsrRpt].[FactOnTimePerformance] F WITH ( NOLOCK )",
              "  JOIN [UsrRpt].[DimDate] dt ON F.StartDateLocalKey = dt.DateKey",
              "   ",
              "  WHERE  1=1",
              "  --AND CustomerKey IN (28) -- Dow only",
              "  --AND CustomerKey IN (35, 28, 50,72,73) -- new ones",
              "  AND [StartDateLocalKey]>=@StartDate",
              "  AND [StartDateLocalKey]<=@EndDate",
              "  AND [StopSequence]=1",
              "  AND [EventTypeKey] IN (216,218) --'X3' --actual arrive at pickup, 'X1' --actual arrive at delivery</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "FactTender",
        "columns": [
          {
            "name": "TenderKey",
            "dataType": "int64",
            "sourceColumn": "TenderKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "TenderCarrierKey",
            "dataType": "int64",
            "sourceColumn": "TenderCarrierKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "ActualCarrierKey",
            "dataType": "int64",
            "sourceColumn": "ActualCarrierKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "CustomerKey",
            "dataType": "int64",
            "sourceColumn": "CustomerKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "ModeKey",
            "dataType": "int64",
            "sourceColumn": "ModeKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "DestinationLocationKey",
            "dataType": "int64",
            "sourceColumn": "DestinationLocationKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "SourceLocationKey",
            "dataType": "int64",
            "sourceColumn": "SourceLocationKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "StartDateLocalKey",
            "dataType": "int64",
            "sourceColumn": "StartDateLocalKey",
            "sourceProviderType": "Integer"
          },
          {
            "name": "TenderDate",
            "dataType": "dateTime",
            "sourceColumn": "TenderDate",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "ShipmentKey",
            "dataType": "int64",
            "sourceColumn": "ShipmentKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "BidAmountOriginal",
            "dataType": "double",
            "sourceColumn": "BidAmountOriginal",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "sourceProviderType": "Decimal",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "IsSpotBid",
            "dataType": "int64",
            "sourceColumn": "IsSpotBid",
            "sourceProviderType": "Integer"
          },
          {
            "name": "IsSpotOffer",
            "dataType": "int64",
            "sourceColumn": "IsSpotOffer",
            "sourceProviderType": "Integer"
          },
          {
            "name": "IsSpotWinner",
            "dataType": "int64",
            "sourceColumn": "IsSpotWinner",
            "sourceProviderType": "Integer"
          },
          {
            "name": "TenderType",
            "dataType": "string",
            "sourceColumn": "TenderType",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "IsPrimeCarrier",
            "dataType": "int64",
            "sourceColumn": "IsPrimeCarrier",
            "sourceProviderType": "Integer"
          },
          {
            "name": "AcceptanceCode",
            "dataType": "string",
            "sourceColumn": "AcceptanceCode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "TenderSequence",
            "dataType": "int64",
            "sourceColumn": "TenderSequence",
            "sourceProviderType": "BigInt"
          }
        ],
        "partitions": [
          {
            "name": "FactTender",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "-- Last Modified : 4-21-2023 [RK]",
                "-- Tenders and Bid Participation by Carriers  -- ",
                "--==================================================",
                "",
                "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112)) -- Last year to dat",
                "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
                "",
                "IF OBJECT_ID('Tempdb.dbo.#TenderOfInterest') IS NOT NULL DROP TABLE #TenderOfInterest",
                "SELECT F.[TenderKey]",
                "      ,F.[TenderCarrierKey]",
                "      ,F.[ActualCarrierKey]",
                "      ,F.[CustomerKey]",
                "      ,F.[ModeKey]",
                "      ,F.[DestinationLocationKey]    ",
                "      ,F.[SourceLocationKey]",
                "      ,F.[StartDateLocalKey]       ",
                "      ,F.[BidAmountOriginal]",
                "\t  ,F.[ShipmentKey]",
                "",
                "INTO #TenderOfInterest",
                "FROM [UsrRpt].[FactTender] F WITH ( NOLOCK )",
                "WHERE F.[StartDateLocalKey]>=@StartDate",
                "\tAND F.[StartDateLocalKey]<=@EndDate",
                "              --AND CustomerKey IN (28) -- Dow only",
                "\t--AND CustomerKey IN (35, 28, 50,72,73) -- new ones",
                "OPTION (RECOMPILE)",
                "",
                "SELECT T.[TenderKey]",
                "      ,T.[TenderCarrierKey]",
                "\t  ,T.[ActualCarrierKey]",
                "      ,T.[CustomerKey]",
                "      ,T.[ModeKey]",
                "      ,T.[DestinationLocationKey]    ",
                "      ,T.[SourceLocationKey]",
                "      ,T.[StartDateLocalKey]",
                "\t  ,dt.[Date] as [TenderDate]",
                "\t  ,T.[ShipmentKey]",
                "      ,T.[BidAmountOriginal]",
                "\t  ,Cast(D.[IsSpotBid] As Int) As [IsSpotBid]",
                "      ,Cast(D.[IsSpotOffer] As Int) As [IsSpotOffer]",
                "\t  ,Cast(D.[IsSpotBidWinner] As Int) As [IsSpotWinner]",
                "\t  ,D.[TenderType]\t  ",
                "\t  ,Cast(D.[IsPrimeCarrier] As Int) As [IsPrimeCarrier]",
                "\t  ,D.[AcceptanceCode]",
                "\t  ,D.[TenderSequence]",
                "FROM #TenderOfInterest T",
                "INNER JOIN [UsrRpt].[DimTender] D WITH ( NOLOCK ) ON T.[TenderKey]=D.[TenderKey]",
                "JOIN [UsrRpt].[DimDate] dt ON T.[StartDateLocalKey] = dt.DateKey",
                "OPTION (RECOMPILE)"
              ],
              "dataSource": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Last Modified : 4-21-2023 [RK]",
                  "-- Tenders and Bid Participation by Carriers  -- ",
                  "--==================================================",
                  "",
                  "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112)) -- Last year to dat",
                  "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
                  "",
                  "IF OBJECT_ID('Tempdb.dbo.#TenderOfInterest') IS NOT NULL DROP TABLE #TenderOfInterest",
                  "SELECT F.[TenderKey]",
                  "      ,F.[TenderCarrierKey]",
                  "      ,F.[ActualCarrierKey]",
                  "      ,F.[CustomerKey]",
                  "      ,F.[ModeKey]",
                  "      ,F.[DestinationLocationKey]    ",
                  "      ,F.[SourceLocationKey]",
                  "      ,F.[StartDateLocalKey]       ",
                  "      ,F.[BidAmountOriginal]",
                  "\t  ,F.[ShipmentKey]",
                  "",
                  "INTO #TenderOfInterest",
                  "FROM [UsrRpt].[FactTender] F WITH ( NOLOCK )",
                  "WHERE F.[StartDateLocalKey]>=@StartDate",
                  "\tAND F.[StartDateLocalKey]<=@EndDate",
                  "              --AND CustomerKey IN (28) -- Dow only",
                  "\t--AND CustomerKey IN (35, 28, 50,72,73) -- new ones",
                  "OPTION (RECOMPILE)",
                  "",
                  "SELECT T.[TenderKey]",
                  "      ,T.[TenderCarrierKey]",
                  "\t  ,T.[ActualCarrierKey]",
                  "      ,T.[CustomerKey]",
                  "      ,T.[ModeKey]",
                  "      ,T.[DestinationLocationKey]    ",
                  "      ,T.[SourceLocationKey]",
                  "      ,T.[StartDateLocalKey]",
                  "\t  ,dt.[Date] as [TenderDate]",
                  "\t  ,T.[ShipmentKey]",
                  "      ,T.[BidAmountOriginal]",
                  "\t  ,Cast(D.[IsSpotBid] As Int) As [IsSpotBid]",
                  "      ,Cast(D.[IsSpotOffer] As Int) As [IsSpotOffer]",
                  "\t  ,Cast(D.[IsSpotBidWinner] As Int) As [IsSpotWinner]",
                  "\t  ,D.[TenderType]\t  ",
                  "\t  ,Cast(D.[IsPrimeCarrier] As Int) As [IsPrimeCarrier]",
                  "\t  ,D.[AcceptanceCode]",
                  "\t  ,D.[TenderSequence]",
                  "FROM #TenderOfInterest T",
                  "INNER JOIN [UsrRpt].[DimTender] D WITH ( NOLOCK ) ON T.[TenderKey]=D.[TenderKey]",
                  "JOIN [UsrRpt].[DimDate] dt ON T.[StartDateLocalKey] = dt.DateKey",
                  "OPTION (RECOMPILE)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "calcNonSpotTenderOffers",
            "expression": [
              " ",
              "   //count unique tenders that have no spot activities involved.",
              "",
              "VAR NonSpotOffer = CALCULATETABLE( SUMMARIZE( FactTender, FactTender[ShipmentKey],FactTender[TenderCarrierKey]) ",
              "\t\t\t\t\t\t\t\t, FILTER( FactTender, FactTender[IsSpotOffer] = 0 )) ",
              "  //Identify spot activitiy in the tender lifecycle.",
              "",
              "RETURN ",
              "COUNTROWS(NonSpotOffer)"
            ],
            "formatString": "#,0",
            "displayFolder": "Tenders\\FirstLevel"
          },
          {
            "name": "calcNonSpotAcceptedTenderOffers",
            "expression": [
              " ",
              "   //count unique tenders that have no spot activities involved.",
              "",
              "VAR NonSpotAcceptedOffers = CALCULATETABLE( SUMMARIZE( FactTender, FactTender[ShipmentKey],FactTender[TenderCarrierKey]) ",
              "\t\t\t\t\t\t\t\t, FILTER( FILTER(FactTender,'FactTender'[TenderType] = \"Ordinary\"), FactTender[AcceptanceCode] = \"A\" )) ",
              "  //accepted offers.",
              "",
              "RETURN ",
              "COUNTROWS(NonSpotAcceptedOffers)"
            ],
            "formatString": "#,0",
            "displayFolder": "Tenders\\FirstLevel"
          },
          {
            "name": "calcNonSpotDeclinedTenderOffers",
            "expression": [
              " ",
              "   //count unique tenders that have no spot activities involved.",
              "",
              "VAR NonSpotAcceptedOffers = CALCULATETABLE( SUMMARIZE( FactTender, FactTender[ShipmentKey],FactTender[TenderCarrierKey]) ",
              "\t\t\t\t\t\t\t\t, FILTER( FILTER(FactTender,'FactTender'[TenderType] = \"Ordinary\"), FactTender[AcceptanceCode] = \"D\" )) ",
              "  //accepted offers.",
              "",
              "RETURN ",
              "COUNTROWS(NonSpotAcceptedOffers)"
            ],
            "formatString": "#,0",
            "displayFolder": "Tenders\\FirstLevel"
          },
          {
            "name": "calcNonSpotDeclinedWhereCarrierIsPrimary",
            "expression": [
              " ",
              "   //count unique tenders that have no spot activities involved.",
              "",
              "VAR NonSpotDeclinedOffers = CALCULATETABLE( SUMMARIZE( FactTender, FactTender[ShipmentKey],FactTender[TenderCarrierKey]) ",
              "\t\t\t\t\t\t\t\t, FILTER( FILTER(FactTender,'FactTender'[IsPrimeCarrier] = 1), FactTender[AcceptanceCode] = \"D\" )) ",
              "  //accepted offers.",
              "",
              "RETURN ",
              "COUNTROWS(NonSpotDeclinedOffers)"
            ],
            "formatString": "#,0",
            "displayFolder": "Tenders\\FirstLevel"
          },
          {
            "name": "NonSpotTendersYTD",
            "expression": " TOTALYTD([calcNonSpotTenderOffers],'DateTable'[Date])",
            "formatString": "#,0",
            "displayFolder": "Tenders\\Overall Tenders MTDYTD"
          },
          {
            "name": "NonSpotTenderSamePeriod LastYear",
            "expression": [
              " ",
              "CALCULATE",
              "(  [calcNonSpotTenderOffers],",
              "    SAMEPERIODLASTYEAR('DateTable'[Date])",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Tenders\\Overall Tenders MTDYTD"
          },
          {
            "name": "NonSpotAcceptedYTD",
            "expression": " TotalYTD([calcNonSpotAcceptedTenderOffers], DateTable[Date])",
            "formatString": "#,0",
            "displayFolder": "Tenders\\Overall Tenders MTDYTD"
          },
          {
            "name": "NonSpotAcceptance%",
            "expression": " DIVIDE([NonSpotAcceptedYTD],[NonSpotTendersYTD])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Tenders\\Overall Tenders MTDYTD"
          },
          {
            "name": "NonSpotTenderAcceptedSamePeriod LastYear",
            "expression": [
              " ",
              "CALCULATE",
              "(  [calcNonSpotAcceptedTenderOffers],",
              "    SAMEPERIODLASTYEAR('DateTable'[Date])",
              ")"
            ],
            "formatString": "#,0",
            "displayFolder": "Tenders\\Overall Tenders MTDYTD"
          },
          {
            "name": "calcNonSpotTenderDeclinedWhereCarrierIsPrimary%",
            "expression": " DIVIDE([calcNonSpotDeclinedWhereCarrierIsPrimary],[calcNonSpotTenderOffers])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Tenders\\Overall Tenders MTDYTD"
          },
          {
            "name": "calcNonSpotTenderDeclined%",
            "expression": " DIVIDE([calcNonSpotDeclinedTenderOffers],[calcNonSpotTenderOffers])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Tenders\\Overall Tenders MTDYTD"
          },
          {
            "name": "calcNonSpotTenderAcceptance%",
            "expression": " DIVIDE([calcNonSpotAcceptedTenderOffers],[calcNonSpotTenderOffers])",
            "formatString": "0.0%;-0.0%;0.0%",
            "displayFolder": "Tenders\\Overall Tenders MTDYTD"
          },
          {
            "name": "calcSpotOfferCount",
            "expression": [
              " ",
              "",
              "VAR SpotOffer = CALCULATETABLE( SUMMARIZE( FactTender, FactTender[ShipmentKey],FactTender[TenderCarrierKey]) ",
              "\t\t\t    , FILTER( FactTender, FactTender[IsSpotOffer] = 1 )) ",
              "RETURN ",
              "COUNTROWS(SpotOffer)"
            ],
            "formatString": "#,0"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "-- Last Modified : 4-21-2023 [RK]",
              "-- Tenders and Bid Participation by Carriers  -- ",
              "--==================================================",
              "",
              "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112)) -- Last year to dat",
              "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
              "",
              "IF OBJECT_ID('Tempdb.dbo.#TenderOfInterest') IS NOT NULL DROP TABLE #TenderOfInterest",
              "SELECT F.[TenderKey]",
              "      ,F.[TenderCarrierKey]",
              "      ,F.[ActualCarrierKey]",
              "      ,F.[CustomerKey]",
              "      ,F.[ModeKey]",
              "      ,F.[DestinationLocationKey]    ",
              "      ,F.[SourceLocationKey]",
              "      ,F.[StartDateLocalKey]       ",
              "      ,F.[BidAmountOriginal]",
              "\t  ,F.[ShipmentKey]",
              "",
              "INTO #TenderOfInterest",
              "FROM [UsrRpt].[FactTender] F WITH ( NOLOCK )",
              "WHERE F.[StartDateLocalKey]>=@StartDate",
              "\tAND F.[StartDateLocalKey]<=@EndDate",
              "              --AND CustomerKey IN (28) -- Dow only",
              "\t--AND CustomerKey IN (35, 28, 50,72,73) -- new ones",
              "OPTION (RECOMPILE)",
              "",
              "SELECT T.[TenderKey]",
              "      ,T.[TenderCarrierKey]",
              "\t  ,T.[ActualCarrierKey]",
              "      ,T.[CustomerKey]",
              "      ,T.[ModeKey]",
              "      ,T.[DestinationLocationKey]    ",
              "      ,T.[SourceLocationKey]",
              "      ,T.[StartDateLocalKey]",
              "\t  ,dt.[Date] as [TenderDate]",
              "\t  ,T.[ShipmentKey]",
              "      ,T.[BidAmountOriginal]",
              "\t  ,Cast(D.[IsSpotBid] As Int) As [IsSpotBid]",
              "      ,Cast(D.[IsSpotOffer] As Int) As [IsSpotOffer]",
              "\t  ,Cast(D.[IsSpotBidWinner] As Int) As [IsSpotWinner]",
              "\t  ,D.[TenderType]\t  ",
              "\t  ,Cast(D.[IsPrimeCarrier] As Int) As [IsPrimeCarrier]",
              "\t  ,D.[AcceptanceCode]",
              "\t  ,D.[TenderSequence]",
              "FROM #TenderOfInterest T",
              "INNER JOIN [UsrRpt].[DimTender] D WITH ( NOLOCK ) ON T.[TenderKey]=D.[TenderKey]",
              "JOIN [UsrRpt].[DimDate] dt ON T.[StartDateLocalKey] = dt.DateKey",
              "OPTION (RECOMPILE)"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "FactTender"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Last Modified : 4-21-2023 [RK]",
              "-- Tenders and Bid Participation by Carriers  -- ",
              "--==================================================",
              "",
              "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112)) -- Last year to dat",
              "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
              "",
              "IF OBJECT_ID('Tempdb.dbo.#TenderOfInterest') IS NOT NULL DROP TABLE #TenderOfInterest",
              "SELECT F.[TenderKey]",
              "      ,F.[TenderCarrierKey]",
              "      ,F.[ActualCarrierKey]",
              "      ,F.[CustomerKey]",
              "      ,F.[ModeKey]",
              "      ,F.[DestinationLocationKey]    ",
              "      ,F.[SourceLocationKey]",
              "      ,F.[StartDateLocalKey]       ",
              "      ,F.[BidAmountOriginal]",
              "\t  ,F.[ShipmentKey]",
              "",
              "INTO #TenderOfInterest",
              "FROM [UsrRpt].[FactTender] F WITH ( NOLOCK )",
              "WHERE F.[StartDateLocalKey]>=@StartDate",
              "\tAND F.[StartDateLocalKey]<=@EndDate",
              "              --AND CustomerKey IN (28) -- Dow only",
              "\t--AND CustomerKey IN (35, 28, 50,72,73) -- new ones",
              "OPTION (RECOMPILE)",
              "",
              "SELECT T.[TenderKey]",
              "      ,T.[TenderCarrierKey]",
              "\t  ,T.[ActualCarrierKey]",
              "      ,T.[CustomerKey]",
              "      ,T.[ModeKey]",
              "      ,T.[DestinationLocationKey]    ",
              "      ,T.[SourceLocationKey]",
              "      ,T.[StartDateLocalKey]",
              "\t  ,dt.[Date] as [TenderDate]",
              "\t  ,T.[ShipmentKey]",
              "      ,T.[BidAmountOriginal]",
              "\t  ,Cast(D.[IsSpotBid] As Int) As [IsSpotBid]",
              "      ,Cast(D.[IsSpotOffer] As Int) As [IsSpotOffer]",
              "\t  ,Cast(D.[IsSpotBidWinner] As Int) As [IsSpotWinner]",
              "\t  ,D.[TenderType]\t  ",
              "\t  ,Cast(D.[IsPrimeCarrier] As Int) As [IsPrimeCarrier]",
              "\t  ,D.[AcceptanceCode]",
              "\t  ,D.[TenderSequence]",
              "FROM #TenderOfInterest T",
              "INNER JOIN [UsrRpt].[DimTender] D WITH ( NOLOCK ) ON T.[TenderKey]=D.[TenderKey]",
              "JOIN [UsrRpt].[DimDate] dt ON T.[StartDateLocalKey] = dt.DateKey",
              "OPTION (RECOMPILE)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimSourceLocation",
        "columns": [
          {
            "name": "LocationKey",
            "dataType": "int64",
            "sourceColumn": "LocationKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "SourceName",
            "dataType": "string",
            "sourceColumn": "SourceName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SourceCity",
            "dataType": "string",
            "sourceColumn": "SourceCity",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SourceProvince",
            "dataType": "string",
            "sourceColumn": "SourceProvince",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "SourcePostalCode",
            "dataType": "string",
            "sourceColumn": "SourcePostalCode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CityState",
            "dataType": "string",
            "sourceColumn": "CityState",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "DimSourceLocation",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "-- Last Modified : 4-26-2023 [RK]",
                "--===================",
                "",
                "-- Source Location -- ",
                "",
                "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
                "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
                ";",
                "",
                "IF OBJECT_ID('Tempdb.dbo.#InterestedLocation') IS NOT NULL DROP TABLE #InterestedLocation;",
                "",
                "SELECT DISTINCT SourceLocationKey",
                "INTO #InterestedLocation",
                "FROM [UsrRpt].[FactShipment] WITH ( NOLOCK )",
                "WHERE StartDateLocalKey>=@StartDate AND StartDateLocalKey<=@EndDate",
                "SELECT [LocationKey]",
                "      ,[LocationName] AS SourceName",
                "      ,[City] AS SourceCity",
                "      ,[Province] AS SourceProvince",
                "      ,[PostalCode] AS SourcePostalCode",
                "      ,[City]+', '+[Province] AS [CityState]",
                "FROM #InterestedLocation F",
                "INNER JOIN [UsrRpt].[DimLocation] SL WITH ( NOLOCK ) ON F.SourceLocationKey=SL.LocationKey"
              ],
              "dataSource": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Last Modified : 4-26-2023 [RK]",
                  "--===================",
                  "",
                  "-- Source Location -- ",
                  "",
                  "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
                  "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
                  ";",
                  "",
                  "IF OBJECT_ID('Tempdb.dbo.#InterestedLocation') IS NOT NULL DROP TABLE #InterestedLocation;",
                  "",
                  "SELECT DISTINCT SourceLocationKey",
                  "INTO #InterestedLocation",
                  "FROM [UsrRpt].[FactShipment] WITH ( NOLOCK )",
                  "WHERE StartDateLocalKey>=@StartDate AND StartDateLocalKey<=@EndDate",
                  "SELECT [LocationKey]",
                  "      ,[LocationName] AS SourceName",
                  "      ,[City] AS SourceCity",
                  "      ,[Province] AS SourceProvince",
                  "      ,[PostalCode] AS SourcePostalCode",
                  "      ,[City]+', '+[Province] AS [CityState]",
                  "FROM #InterestedLocation F",
                  "INNER JOIN [UsrRpt].[DimLocation] SL WITH ( NOLOCK ) ON F.SourceLocationKey=SL.LocationKey</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "-- Last Modified : 4-26-2023 [RK]",
              "--===================",
              "",
              "-- Source Location -- ",
              "",
              "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
              "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
              ";",
              "",
              "IF OBJECT_ID('Tempdb.dbo.#InterestedLocation') IS NOT NULL DROP TABLE #InterestedLocation;",
              "",
              "SELECT DISTINCT SourceLocationKey",
              "INTO #InterestedLocation",
              "FROM [UsrRpt].[FactShipment] WITH ( NOLOCK )",
              "WHERE StartDateLocalKey>=@StartDate AND StartDateLocalKey<=@EndDate",
              "SELECT [LocationKey]",
              "      ,[LocationName] AS SourceName",
              "      ,[City] AS SourceCity",
              "      ,[Province] AS SourceProvince",
              "      ,[PostalCode] AS SourcePostalCode",
              "      ,[City]+', '+[Province] AS [CityState]",
              "FROM #InterestedLocation F",
              "INNER JOIN [UsrRpt].[DimLocation] SL WITH ( NOLOCK ) ON F.SourceLocationKey=SL.LocationKey"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimSourceLocation"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Last Modified : 4-26-2023 [RK]",
              "--===================",
              "",
              "-- Source Location -- ",
              "",
              "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
              "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
              ";",
              "",
              "IF OBJECT_ID('Tempdb.dbo.#InterestedLocation') IS NOT NULL DROP TABLE #InterestedLocation;",
              "",
              "SELECT DISTINCT SourceLocationKey",
              "INTO #InterestedLocation",
              "FROM [UsrRpt].[FactShipment] WITH ( NOLOCK )",
              "WHERE StartDateLocalKey>=@StartDate AND StartDateLocalKey<=@EndDate",
              "SELECT [LocationKey]",
              "      ,[LocationName] AS SourceName",
              "      ,[City] AS SourceCity",
              "      ,[Province] AS SourceProvince",
              "      ,[PostalCode] AS SourcePostalCode",
              "      ,[City]+', '+[Province] AS [CityState]",
              "FROM #InterestedLocation F",
              "INNER JOIN [UsrRpt].[DimLocation] SL WITH ( NOLOCK ) ON F.SourceLocationKey=SL.LocationKey</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimDestinationLocation",
        "columns": [
          {
            "name": "LocationKey",
            "dataType": "int64",
            "sourceColumn": "LocationKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "DestinationName",
            "dataType": "string",
            "sourceColumn": "DestinationName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DestinationCity",
            "dataType": "string",
            "sourceColumn": "DestinationCity",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DestinationProvince",
            "dataType": "string",
            "sourceColumn": "DestinationProvince",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "DestinationPostalCode",
            "dataType": "string",
            "sourceColumn": "DestinationPostalCode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "CityState",
            "dataType": "string",
            "sourceColumn": "CityState",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "DimDestinationLocation",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "--Last Modified : 4-26-2023 [RK]",
                "--==================",
                "",
                "-- Destination -- ",
                "",
                "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
                "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
                ";",
                "",
                "IF OBJECT_ID('Tempdb.dbo.#InterestedLocation') IS NOT NULL DROP TABLE #InterestedLocation;",
                "",
                "SELECT DISTINCT DestinationLocationKey",
                "INTO #InterestedLocation",
                "FROM [UsrRpt].[FactShipment] WITH ( NOLOCK )",
                "WHERE StartDateLocalKey>=@StartDate AND StartDateLocalKey<=@EndDate",
                "",
                "SELECT [LocationKey]",
                "      ,[LocationName] AS DestinationName",
                "      ,[City] AS DestinationCity",
                "      ,[Province] AS DestinationProvince",
                "      ,[PostalCode] AS DestinationPostalCode",
                "      ,[City]+', '+[Province] AS [CityState]",
                "FROM #InterestedLocation F",
                "INNER JOIN [UsrRpt].[DimLocation] SL WITH ( NOLOCK ) ON F.DestinationLocationKey=SL.LocationKey"
              ],
              "dataSource": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>--Last Modified : 4-26-2023 [RK]",
                  "--==================",
                  "",
                  "-- Destination -- ",
                  "",
                  "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
                  "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
                  ";",
                  "",
                  "IF OBJECT_ID('Tempdb.dbo.#InterestedLocation') IS NOT NULL DROP TABLE #InterestedLocation;",
                  "",
                  "SELECT DISTINCT DestinationLocationKey",
                  "INTO #InterestedLocation",
                  "FROM [UsrRpt].[FactShipment] WITH ( NOLOCK )",
                  "WHERE StartDateLocalKey>=@StartDate AND StartDateLocalKey<=@EndDate",
                  "",
                  "SELECT [LocationKey]",
                  "      ,[LocationName] AS DestinationName",
                  "      ,[City] AS DestinationCity",
                  "      ,[Province] AS DestinationProvince",
                  "      ,[PostalCode] AS DestinationPostalCode",
                  "      ,[City]+', '+[Province] AS [CityState]",
                  "FROM #InterestedLocation F",
                  "INNER JOIN [UsrRpt].[DimLocation] SL WITH ( NOLOCK ) ON F.DestinationLocationKey=SL.LocationKey</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "--Last Modified : 4-26-2023 [RK]",
              "--==================",
              "",
              "-- Destination -- ",
              "",
              "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
              "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
              ";",
              "",
              "IF OBJECT_ID('Tempdb.dbo.#InterestedLocation') IS NOT NULL DROP TABLE #InterestedLocation;",
              "",
              "SELECT DISTINCT DestinationLocationKey",
              "INTO #InterestedLocation",
              "FROM [UsrRpt].[FactShipment] WITH ( NOLOCK )",
              "WHERE StartDateLocalKey>=@StartDate AND StartDateLocalKey<=@EndDate",
              "",
              "SELECT [LocationKey]",
              "      ,[LocationName] AS DestinationName",
              "      ,[City] AS DestinationCity",
              "      ,[Province] AS DestinationProvince",
              "      ,[PostalCode] AS DestinationPostalCode",
              "      ,[City]+', '+[Province] AS [CityState]",
              "FROM #InterestedLocation F",
              "INNER JOIN [UsrRpt].[DimLocation] SL WITH ( NOLOCK ) ON F.DestinationLocationKey=SL.LocationKey"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimDestinationLocation"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>--Last Modified : 4-26-2023 [RK]",
              "--==================",
              "",
              "-- Destination -- ",
              "",
              "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
              "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
              ";",
              "",
              "IF OBJECT_ID('Tempdb.dbo.#InterestedLocation') IS NOT NULL DROP TABLE #InterestedLocation;",
              "",
              "SELECT DISTINCT DestinationLocationKey",
              "INTO #InterestedLocation",
              "FROM [UsrRpt].[FactShipment] WITH ( NOLOCK )",
              "WHERE StartDateLocalKey>=@StartDate AND StartDateLocalKey<=@EndDate",
              "",
              "SELECT [LocationKey]",
              "      ,[LocationName] AS DestinationName",
              "      ,[City] AS DestinationCity",
              "      ,[Province] AS DestinationProvince",
              "      ,[PostalCode] AS DestinationPostalCode",
              "      ,[City]+', '+[Province] AS [CityState]",
              "FROM #InterestedLocation F",
              "INNER JOIN [UsrRpt].[DimLocation] SL WITH ( NOLOCK ) ON F.DestinationLocationKey=SL.LocationKey</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimMode",
        "columns": [
          {
            "name": "ModeKey",
            "dataType": "int64",
            "sourceColumn": "ModeKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "ModeNumber",
            "dataType": "string",
            "sourceColumn": "ModeNumber",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ModeName",
            "dataType": "string",
            "sourceColumn": "ModeName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "ModeType",
            "dataType": "string",
            "sourceColumn": "ModeType",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "DimMode",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "Select ModeKey, ModeNumber, ModeName, ModeType from UsrRpt.DimMode",
              "dataSource": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>Select ModeKey, ModeNumber, ModeName, ModeType from UsrRpt.DimMode</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "Select ModeKey, ModeNumber, ModeName, ModeType from UsrRpt.DimMode"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimMode"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>Select ModeKey, ModeNumber, ModeName, ModeType from UsrRpt.DimMode</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "DimEventType",
        "columns": [
          {
            "name": "EventTypeKey",
            "dataType": "int64",
            "sourceColumn": "EventTypeKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "EventTypeNumber",
            "dataType": "string",
            "sourceColumn": "EventTypeNumber",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "EventTypeName",
            "dataType": "string",
            "sourceColumn": "EventTypeName",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "DimEventType",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "--Last Modified : 4-26-2023 [RK]",
                "--=================",
                "",
                "-- Events -- ",
                "",
                "SELECT [EventTypeKey]",
                "      ,[EventTypeNumber]",
                "      ,[EventTypeName]",
                "      ",
                "  FROM [UsrRpt].[DimEventType]",
                "  WHERE [EventTypeKey] IN (53 ,89, 216,218,221) ",
                "  -- 53 is AF-Actual Pickup, 89 is D1-Completed Unloading at Delivery Location, 216 is X1-Arrived at Delivery Location, 218 is X3-Arrived at Pick-up Location, 221 is the En Rout."
              ],
              "dataSource": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>--Last Modified : 4-26-2023 [RK]",
                  "--=================",
                  "",
                  "-- Events -- ",
                  "",
                  "SELECT [EventTypeKey]",
                  "      ,[EventTypeNumber]",
                  "      ,[EventTypeName]",
                  "      ",
                  "  FROM [UsrRpt].[DimEventType]",
                  "  WHERE [EventTypeKey] IN (53 ,89, 216,218,221) ",
                  "  -- 53 is AF-Actual Pickup, 89 is D1-Completed Unloading at Delivery Location, 216 is X1-Arrived at Delivery Location, 218 is X3-Arrived at Pick-up Location, 221 is the En Rout.</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "--Last Modified : 4-26-2023 [RK]",
              "--=================",
              "",
              "-- Events -- ",
              "",
              "SELECT [EventTypeKey]",
              "      ,[EventTypeNumber]",
              "      ,[EventTypeName]",
              "      ",
              "  FROM [UsrRpt].[DimEventType]",
              "  WHERE [EventTypeKey] IN (53 ,89, 216,218,221) ",
              "  -- 53 is AF-Actual Pickup, 89 is D1-Completed Unloading at Delivery Location, 216 is X1-Arrived at Delivery Location, 218 is X3-Arrived at Pick-up Location, 221 is the En Rout."
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimEventType"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>--Last Modified : 4-26-2023 [RK]",
              "--=================",
              "",
              "-- Events -- ",
              "",
              "SELECT [EventTypeKey]",
              "      ,[EventTypeNumber]",
              "      ,[EventTypeName]",
              "      ",
              "  FROM [UsrRpt].[DimEventType]",
              "  WHERE [EventTypeKey] IN (53 ,89, 216,218,221) ",
              "  -- 53 is AF-Actual Pickup, 89 is D1-Completed Unloading at Delivery Location, 216 is X1-Arrived at Delivery Location, 218 is X3-Arrived at Pick-up Location, 221 is the En Rout.</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "calccolumnbreak",
        "columns": [
          {
            "name": "~",
            "dataType": "int64",
            "sourceColumn": "~",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "Query",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "Select NULL As '~'",
              "dataSource": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>Select NULL As '~'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "Select NULL As '~'"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Query"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>Select NULL As '~'</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "calcLastRefresh",
        "columns": [
          {
            "name": "LastRefreshDate",
            "dataType": "dateTime",
            "sourceColumn": "LastRefreshDate",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          }
        ],
        "partitions": [
          {
            "name": "Query",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": "Select DATEADD(hh,-5,CONVERT(DATETIME,GETDATE() AT TIME ZONE 'UTC' AT TIME ZONE 'UTC'))  As [LastRefreshDate]",
              "dataSource": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>Select DATEADD(hh,-5,CONVERT(DATETIME,GETDATE() AT TIME ZONE 'UTC' AT TIME ZONE 'UTC'))  As [LastRefreshDate]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": "Select DATEADD(hh,-5,CONVERT(DATETIME,GETDATE() AT TIME ZONE 'UTC' AT TIME ZONE 'UTC'))  As [LastRefreshDate]"
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Query"
          },
          {
            "name": "QueryEditorSerialization",
            "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>Select DATEADD(hh,-5,CONVERT(DATETIME,GETDATE() AT TIME ZONE 'UTC' AT TIME ZONE 'UTC'))  As [LastRefreshDate]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
          }
        ]
      },
      {
        "name": "FactOrder",
        "columns": [
          {
            "name": "CustomerKey",
            "dataType": "int64",
            "sourceColumn": "CustomerKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "ModifiedDate",
            "dataType": "dateTime",
            "sourceColumn": "ModifiedDate",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "OrderDateKey",
            "dataType": "int64",
            "sourceColumn": "OrderDateKey",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Source",
            "dataType": "string",
            "sourceColumn": "Source",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "OrderCount",
            "dataType": "int64",
            "sourceColumn": "OrderCount",
            "sourceProviderType": "Integer"
          }
        ],
        "partitions": [
          {
            "name": "FactOrder",
            "source": {
              "type": "query",
              "query": [
                "--Last Modified : 4-21-2023 [RK]",
                "--Name : MT Executive Dashboard",
                "--Report Description : Query order level shipment, order and AP cost from NextGenDW.",
                "--===================================",
                "DECLARE @InsertStartDate date = DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0))",
                "DECLARE @InsertEndDate date   = getdate()",
                "-------------------------------------------------------------",
                "",
                "IF OBJECT_ID('tempdb..#DimOrder') IS NOT NULL DROP TABLE #DimOrder",
                "SELECT ord.OrderKey ,CAST(ord.ModifiedDate AS DATE) AS ModifiedDate,ord.[Source],ord.OrderID ,ord.DomainName",
                "INTO   #DimOrder",
                "FROM   UsrRpt.DimOrder ord  WITH(NOLOCK) ",
                "WHERE  CAST(ord.ModifiedDate AS DATE) BETWEEN @InsertStartDate AND @InsertEndDate",
                "CREATE NONCLUSTERED INDEX ix_orderId ON #DimOrder(OrderKey)",
                "--Select count(1) from #DimOrder --9,128,435 rows",
                "-------------------------------------------------------------",
                "",
                "IF OBJECT_ID('tempdb..#OS') IS NOT NULL DROP TABLE #OS",
                "SELECT a.OrderKey ,b.ShipmentKey , a.DomainName,a.ModifiedDate, dt.DateKey as OrderDateKey,[Source],OrderID",
                "INTO   #OS",
                "FROM   #DimOrder a ",
                "\tINNER JOIN UsrRpt.FactOrderShipmentJoin b on a.OrderKey = b.OrderKey ",
                "\tLEFT JOIN UsrRpt.DimDate dt ON a.ModifiedDate = dt.Date",
                "CREATE NONCLUSTERED INDEX ix_OrderShipmentKey ON #OS(OrderKey,ShipmentKey)",
                "--Select count(1) from #OS -- 103542",
                "-----------------------------------------------------------------------",
                "",
                "IF OBJECT_ID('tempdb..#OrderDetails') IS NOT NULL DROP TABLE #OrderDetails",
                "SELECT a.OrderKey,dc.CarrierNumber,ds.IsXPOManaged,cust.CustomerKey,a.ModifiedDate, OrderDateKey, OrderID,[Source]",
                "INTO #OrderDetails",
                "FROM #OS a INNER JOIN UsrRpt.FactShipment b ON a.ShipmentKey = b.ShipmentKey ",
                "           INNER JOIN UsrRpt.DimShipment dis ON dis.ShipmentKey = b.ShipmentKey AND dis.AP_AR = 'AP'",
                "           INNER JOIN UsrRpt.DimCarrier DC WITH(NOLOCK) ON DC.CarrierKey = b.CarrierKey",
                "           INNER JOIN UsrRpt.DimCustomer cust WITH(NOLOCK) ON b.CustomerKey = cust.CustomerKey -- to get only active Customers.",
                "\t   INNER JOIN UsrRpt.DimShipmentIndicator DS WITH(NOLOCK) ON b.ShipmentKey = DS.ShipmentKey",
                "\t\t   ",
                "WHERE ds.IsXPOManaged=1 and dc.CarrierNumber NOT IN ('DBID', 'DCHG', 'DLTL', 'MLOG','WICO') -- dummy scac.",
                "CREATE NONCLUSTERED INDEX ix_OrderDetails ON #OS(OrderKey)",
                "-- Select count(1) from #OrderDetails -- 70719",
                "---------------------------------------------------------------------------- ",
                "",
                "IF OBJECT_ID('tempdb..#Category') IS NOT NULL DROP TABLE #Category",
                "SELECT  f.ModifiedDate, OrderDateKey, f.OrderID,f.CustomerKey,f.[Source]",
                "INTO #Category",
                "FROM #OrderDetails f",
                "CREATE NONCLUSTERED INDEX ix_Category ON #OS(OrderKey)",
                "-- Select count(1) from #Category --70719",
                "",
                "----Final ------------------------------------------------------------------",
                "",
                "SELECT CustomerKey,ModifiedDate, OrderDateKey, [Source], count(OrderID) OrderCount",
                "FROM #Category ",
                "--WHERE CustomerKey IN (35, 28, 50,72,73) -- new ones",
                "GROUP BY CustomerKey,ModifiedDate, OrderDateKey, [Source]",
                "-- 5,113,415"
              ],
              "dataSource": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>--Last Modified : 4-21-2023 [RK]",
                  "--Name : MT Executive Dashboard",
                  "--Report Description : Query order level shipment, order and AP cost from NextGenDW.",
                  "--===================================",
                  "DECLARE @InsertStartDate date = DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0))",
                  "DECLARE @InsertEndDate date   = getdate()",
                  "-------------------------------------------------------------",
                  "",
                  "IF OBJECT_ID('tempdb..#DimOrder') IS NOT NULL DROP TABLE #DimOrder",
                  "SELECT ord.OrderKey ,CAST(ord.ModifiedDate AS DATE) AS ModifiedDate,ord.[Source],ord.OrderID ,ord.DomainName",
                  "INTO   #DimOrder",
                  "FROM   UsrRpt.DimOrder ord  WITH(NOLOCK) ",
                  "WHERE  CAST(ord.ModifiedDate AS DATE) BETWEEN @InsertStartDate AND @InsertEndDate",
                  "CREATE NONCLUSTERED INDEX ix_orderId ON #DimOrder(OrderKey)",
                  "--Select count(1) from #DimOrder --9,128,435 rows",
                  "-------------------------------------------------------------",
                  "",
                  "IF OBJECT_ID('tempdb..#OS') IS NOT NULL DROP TABLE #OS",
                  "SELECT a.OrderKey ,b.ShipmentKey , a.DomainName,a.ModifiedDate, dt.DateKey as OrderDateKey,[Source],OrderID",
                  "INTO   #OS",
                  "FROM   #DimOrder a ",
                  "\tINNER JOIN UsrRpt.FactOrderShipmentJoin b on a.OrderKey = b.OrderKey ",
                  "\tLEFT JOIN UsrRpt.DimDate dt ON a.ModifiedDate = dt.Date",
                  "CREATE NONCLUSTERED INDEX ix_OrderShipmentKey ON #OS(OrderKey,ShipmentKey)",
                  "--Select count(1) from #OS -- 103542",
                  "-----------------------------------------------------------------------",
                  "",
                  "IF OBJECT_ID('tempdb..#OrderDetails') IS NOT NULL DROP TABLE #OrderDetails",
                  "SELECT a.OrderKey,dc.CarrierNumber,ds.IsXPOManaged,cust.CustomerKey,a.ModifiedDate, OrderDateKey, OrderID,[Source]",
                  "INTO #OrderDetails",
                  "FROM #OS a INNER JOIN UsrRpt.FactShipment b ON a.ShipmentKey = b.ShipmentKey ",
                  "           INNER JOIN UsrRpt.DimShipment dis ON dis.ShipmentKey = b.ShipmentKey AND dis.AP_AR = 'AP'",
                  "           INNER JOIN UsrRpt.DimCarrier DC WITH(NOLOCK) ON DC.CarrierKey = b.CarrierKey",
                  "           INNER JOIN UsrRpt.DimCustomer cust WITH(NOLOCK) ON b.CustomerKey = cust.CustomerKey -- to get only active Customers.",
                  "\t   INNER JOIN UsrRpt.DimShipmentIndicator DS WITH(NOLOCK) ON b.ShipmentKey = DS.ShipmentKey",
                  "\t\t   ",
                  "WHERE ds.IsXPOManaged=1 and dc.CarrierNumber NOT IN ('DBID', 'DCHG', 'DLTL', 'MLOG','WICO') -- dummy scac.",
                  "CREATE NONCLUSTERED INDEX ix_OrderDetails ON #OS(OrderKey)",
                  "-- Select count(1) from #OrderDetails -- 70719",
                  "---------------------------------------------------------------------------- ",
                  "",
                  "IF OBJECT_ID('tempdb..#Category') IS NOT NULL DROP TABLE #Category",
                  "SELECT  f.ModifiedDate, OrderDateKey, f.OrderID,f.CustomerKey,f.[Source]",
                  "INTO #Category",
                  "FROM #OrderDetails f",
                  "CREATE NONCLUSTERED INDEX ix_Category ON #OS(OrderKey)",
                  "-- Select count(1) from #Category --70719",
                  "",
                  "----Final ------------------------------------------------------------------",
                  "",
                  "SELECT CustomerKey,ModifiedDate, OrderDateKey, [Source], count(OrderID) OrderCount",
                  "FROM #Category ",
                  "--WHERE CustomerKey IN (35, 28, 50,72,73) -- new ones",
                  "GROUP BY CustomerKey,ModifiedDate, OrderDateKey, [Source]",
                  "-- 5,113,415</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "OrderTotal",
            "expression": " sum('FactOrder'[OrderCount])",
            "formatString": "#,0"
          },
          {
            "name": "OrdersYTD",
            "expression": " TotalYTD([OrderTotal],'DateTable'[Date])",
            "formatString": "#,0"
          },
          {
            "name": "OrdersSamePeriod LastYear",
            "expression": [
              " ",
              "CALCULATE",
              "(  [OrdersYTD],",
              "    SAMEPERIODLASTYEAR('DateTable'[Date])",
              ")"
            ],
            "formatString": "#,0"
          },
          {
            "name": "OrdersQTD",
            "expression": " TotalYTD([OrderTotal],'DateTable'[Date])",
            "formatString": "#,0"
          },
          {
            "name": "Growth YoY",
            "expression": [
              " ",
              "IF(ISBLANK([OrdersSamePeriod LastYear]),blank(),[OrdersYTD] - [OrdersSamePeriod LastYear])"
            ],
            "formatString": "#,0"
          },
          {
            "name": "Growth %",
            "expression": " DIVIDE([Growth YoY],[OrdersSamePeriod LastYear])",
            "formatString": "0.00%;-0.00%;0.00%"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "--Last Modified : 4-21-2023 [RK]",
              "--Name : MT Executive Dashboard",
              "--Report Description : Query order level shipment, order and AP cost from NextGenDW.",
              "--===================================",
              "DECLARE @InsertStartDate date = DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0))",
              "DECLARE @InsertEndDate date   = getdate()",
              "-------------------------------------------------------------",
              "",
              "IF OBJECT_ID('tempdb..#DimOrder') IS NOT NULL DROP TABLE #DimOrder",
              "SELECT ord.OrderKey ,CAST(ord.ModifiedDate AS DATE) AS ModifiedDate,ord.[Source],ord.OrderID ,ord.DomainName",
              "INTO   #DimOrder",
              "FROM   UsrRpt.DimOrder ord  WITH(NOLOCK) ",
              "WHERE  CAST(ord.ModifiedDate AS DATE) BETWEEN @InsertStartDate AND @InsertEndDate",
              "CREATE NONCLUSTERED INDEX ix_orderId ON #DimOrder(OrderKey)",
              "--Select count(1) from #DimOrder --9,128,435 rows",
              "-------------------------------------------------------------",
              "",
              "IF OBJECT_ID('tempdb..#OS') IS NOT NULL DROP TABLE #OS",
              "SELECT a.OrderKey ,b.ShipmentKey , a.DomainName,a.ModifiedDate, dt.DateKey as OrderDateKey,[Source],OrderID",
              "INTO   #OS",
              "FROM   #DimOrder a ",
              "\tINNER JOIN UsrRpt.FactOrderShipmentJoin b on a.OrderKey = b.OrderKey ",
              "\tLEFT JOIN UsrRpt.DimDate dt ON a.ModifiedDate = dt.Date",
              "CREATE NONCLUSTERED INDEX ix_OrderShipmentKey ON #OS(OrderKey,ShipmentKey)",
              "--Select count(1) from #OS -- 103542",
              "-----------------------------------------------------------------------",
              "",
              "IF OBJECT_ID('tempdb..#OrderDetails') IS NOT NULL DROP TABLE #OrderDetails",
              "SELECT a.OrderKey,dc.CarrierNumber,ds.IsXPOManaged,cust.CustomerKey,a.ModifiedDate, OrderDateKey, OrderID,[Source]",
              "INTO #OrderDetails",
              "FROM #OS a INNER JOIN UsrRpt.FactShipment b ON a.ShipmentKey = b.ShipmentKey ",
              "           INNER JOIN UsrRpt.DimShipment dis ON dis.ShipmentKey = b.ShipmentKey AND dis.AP_AR = 'AP'",
              "           INNER JOIN UsrRpt.DimCarrier DC WITH(NOLOCK) ON DC.CarrierKey = b.CarrierKey",
              "           INNER JOIN UsrRpt.DimCustomer cust WITH(NOLOCK) ON b.CustomerKey = cust.CustomerKey -- to get only active Customers.",
              "\t   INNER JOIN UsrRpt.DimShipmentIndicator DS WITH(NOLOCK) ON b.ShipmentKey = DS.ShipmentKey",
              "\t\t   ",
              "WHERE ds.IsXPOManaged=1 and dc.CarrierNumber NOT IN ('DBID', 'DCHG', 'DLTL', 'MLOG','WICO') -- dummy scac.",
              "CREATE NONCLUSTERED INDEX ix_OrderDetails ON #OS(OrderKey)",
              "-- Select count(1) from #OrderDetails -- 70719",
              "---------------------------------------------------------------------------- ",
              "",
              "IF OBJECT_ID('tempdb..#Category') IS NOT NULL DROP TABLE #Category",
              "SELECT  f.ModifiedDate, OrderDateKey, f.OrderID,f.CustomerKey,f.[Source]",
              "INTO #Category",
              "FROM #OrderDetails f",
              "CREATE NONCLUSTERED INDEX ix_Category ON #OS(OrderKey)",
              "-- Select count(1) from #Category --70719",
              "",
              "----Final ------------------------------------------------------------------",
              "",
              "SELECT CustomerKey,ModifiedDate, OrderDateKey, [Source], count(OrderID) OrderCount",
              "FROM #Category ",
              "--WHERE CustomerKey IN (35, 28, 50,72,73) -- new ones",
              "GROUP BY CustomerKey,ModifiedDate, OrderDateKey, [Source]",
              "-- 5,113,415"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "FactOrder1"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>--Last Modified : 4-21-2023 [RK]",
              "--Name : MT Executive Dashboard",
              "--Report Description : Query order level shipment, order and AP cost from NextGenDW.",
              "--===================================",
              "DECLARE @InsertStartDate date = DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0))",
              "DECLARE @InsertEndDate date   = getdate()",
              "-------------------------------------------------------------",
              "",
              "IF OBJECT_ID('tempdb..#DimOrder') IS NOT NULL DROP TABLE #DimOrder",
              "SELECT ord.OrderKey ,CAST(ord.ModifiedDate AS DATE) AS ModifiedDate,ord.[Source],ord.OrderID ,ord.DomainName",
              "INTO   #DimOrder",
              "FROM   UsrRpt.DimOrder ord  WITH(NOLOCK) ",
              "WHERE  CAST(ord.ModifiedDate AS DATE) BETWEEN @InsertStartDate AND @InsertEndDate",
              "CREATE NONCLUSTERED INDEX ix_orderId ON #DimOrder(OrderKey)",
              "--Select count(1) from #DimOrder --9,128,435 rows",
              "-------------------------------------------------------------",
              "",
              "IF OBJECT_ID('tempdb..#OS') IS NOT NULL DROP TABLE #OS",
              "SELECT a.OrderKey ,b.ShipmentKey , a.DomainName,a.ModifiedDate, dt.DateKey as OrderDateKey,[Source],OrderID",
              "INTO   #OS",
              "FROM   #DimOrder a ",
              "\tINNER JOIN UsrRpt.FactOrderShipmentJoin b on a.OrderKey = b.OrderKey ",
              "\tLEFT JOIN UsrRpt.DimDate dt ON a.ModifiedDate = dt.Date",
              "CREATE NONCLUSTERED INDEX ix_OrderShipmentKey ON #OS(OrderKey,ShipmentKey)",
              "--Select count(1) from #OS -- 103542",
              "-----------------------------------------------------------------------",
              "",
              "IF OBJECT_ID('tempdb..#OrderDetails') IS NOT NULL DROP TABLE #OrderDetails",
              "SELECT a.OrderKey,dc.CarrierNumber,ds.IsXPOManaged,cust.CustomerKey,a.ModifiedDate, OrderDateKey, OrderID,[Source]",
              "INTO #OrderDetails",
              "FROM #OS a INNER JOIN UsrRpt.FactShipment b ON a.ShipmentKey = b.ShipmentKey ",
              "           INNER JOIN UsrRpt.DimShipment dis ON dis.ShipmentKey = b.ShipmentKey AND dis.AP_AR = 'AP'",
              "           INNER JOIN UsrRpt.DimCarrier DC WITH(NOLOCK) ON DC.CarrierKey = b.CarrierKey",
              "           INNER JOIN UsrRpt.DimCustomer cust WITH(NOLOCK) ON b.CustomerKey = cust.CustomerKey -- to get only active Customers.",
              "\t   INNER JOIN UsrRpt.DimShipmentIndicator DS WITH(NOLOCK) ON b.ShipmentKey = DS.ShipmentKey",
              "\t\t   ",
              "WHERE ds.IsXPOManaged=1 and dc.CarrierNumber NOT IN ('DBID', 'DCHG', 'DLTL', 'MLOG','WICO') -- dummy scac.",
              "CREATE NONCLUSTERED INDEX ix_OrderDetails ON #OS(OrderKey)",
              "-- Select count(1) from #OrderDetails -- 70719",
              "---------------------------------------------------------------------------- ",
              "",
              "IF OBJECT_ID('tempdb..#Category') IS NOT NULL DROP TABLE #Category",
              "SELECT  f.ModifiedDate, OrderDateKey, f.OrderID,f.CustomerKey,f.[Source]",
              "INTO #Category",
              "FROM #OrderDetails f",
              "CREATE NONCLUSTERED INDEX ix_Category ON #OS(OrderKey)",
              "-- Select count(1) from #Category --70719",
              "",
              "----Final ------------------------------------------------------------------",
              "",
              "SELECT CustomerKey,ModifiedDate, OrderDateKey, [Source], count(OrderID) OrderCount",
              "FROM #Category ",
              "--WHERE CustomerKey IN (35, 28, 50,72,73) -- new ones",
              "GROUP BY CustomerKey,ModifiedDate, OrderDateKey, [Source]",
              "-- 5,113,415</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "FactBilling",
        "columns": [
          {
            "name": "APInvoiceKey",
            "dataType": "int64",
            "sourceColumn": "APInvoiceKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "CarrierKey",
            "dataType": "int64",
            "sourceColumn": "CarrierKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "CustomerKey",
            "dataType": "int64",
            "sourceColumn": "CustomerKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "ModeKey",
            "dataType": "int64",
            "sourceColumn": "ModeKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "ShipmentKey",
            "dataType": "int64",
            "sourceColumn": "ShipmentKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "sourceColumn": "Date",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "StartDateLocalKey",
            "dataType": "int64",
            "sourceColumn": "StartDateLocalKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "Invoicingdays",
            "dataType": "int64",
            "sourceColumn": "Invoicingdays",
            "sourceProviderType": "Integer"
          },
          {
            "name": "BlendedAPCost",
            "dataType": "double",
            "sourceColumn": "BlendedAPCost",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "EndDateLocal",
            "dataType": "dateTime",
            "sourceColumn": "EndDateLocal"
          },
          {
            "name": "DateReceivedLocal",
            "dataType": "dateTime",
            "sourceColumn": "DateReceivedLocal"
          }
        ],
        "partitions": [
          {
            "name": "FactBilling",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "--Last Modified : 5-31-2023 [RK]",
                "--Billing",
                "---------------------------------------",
                "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
                "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
                "DECLARE @StartDateLocal DATETIME = DATEADD(month, -1, DATEADD(day, 1 - day(getdate()), getdate())) --The first day of the month 12 months ago--",
                "DECLARE @EndDateLocal DATETIME =CONVERT(VARCHAR(10), getdate(), 112)",
                "",
                "IF OBJECT_ID('Tempdb.dbo.#InvoiceOfInterest') IS NOT NULL DROP TABLE #InvoiceOfInterest",
                "SELECT  F.[APInvoiceKey]",
                "       ,F.[CarrierKey]",
                "\t   ,F.[CustomerKey]",
                "       ,F.[ModeKey]",
                "\t   ,F.[ShipmentKey]",
                "\t   ,[dt].[Date] ",
                "\t   ,F.[StartDateLocalKey]",
                "\t   ,ISNULL(F.[BlendedAPCost],0) AS BlendedAPCost",
                "\t   \t   ",
                "INTO #InvoiceOfInterest",
                "FROM [UsrRpt].[FactFinance] F WITH ( NOLOCK )",
                "  JOIN [UsrRpt].[DimDate] dt ON F.StartDateLocalKey = dt.DateKey",
                "WHERE F.StartDateLocalKey>=@StartDate",
                "\tAND F.StartDateLocalKey<=@EndDate",
                "\tAND F.[FinancialTypeKey] IN (1,3)",
                "--CREATE UNIQUE NONCLUSTERED INDEX idxInvInt on #InvoiceOfInterest([APInvoiceKey])",
                "",
                "",
                "IF OBJECT_ID('Tempdb.dbo.#InvoicesDays') IS NOT NULL DROP TABLE #InvoicesDays",
                "SELECT  [APInvoiceKey]",
                "\t   ,[EndDateLocal]",
                "\t   ,[DateReceivedLocal]",
                "\t   ,DATEDIFF(day, EndDateLocal, DateReceivedLocal) AS [Invoicingdays]",
                "INTO #InvoicesDays",
                "FROM [UsrRpt].[DimAPInvoice] WITH ( NOLOCK )",
                "WHERE 1=1",
                "\tAND StartDateLocal>=@StartDateLocal",
                "\tAND StartDateLocal<=@EndDateLocal",
                "\tOPTION (RECOMPILE)",
                "",
                "-- Final-- ",
                "SELECT ",
                "\t\t I.[APInvoiceKey]",
                "\t\t,I.[CarrierKey]",
                "\t\t,I.[CustomerKey]",
                "\t\t,I.[ModeKey]",
                "\t\t,I.[ShipmentKey]",
                "\t\t,I.[Date] ",
                "\t\t,I.[StartDateLocalKey]",
                "\t\t,D.[Invoicingdays]",
                "\t\t,D.[EndDateLocal] -- ",
                "\t    ,D.[DateReceivedLocal] -- ",
                "\t\t,SUM(I.[BlendedAPCost]) AS BlendedAPCost",
                "",
                "FROM #InvoiceOfInterest I",
                "LEFT JOIN #InvoicesDays D WITH ( NOLOCK ) ON I.APInvoiceKey=D.APInvoiceKey",
                "GROUP BY I.[APInvoiceKey]",
                "\t\t,I.[CarrierKey]",
                "\t\t,I.[CustomerKey]",
                "\t\t,I.[ModeKey]",
                "\t\t,I.[ShipmentKey]",
                "\t\t,I.[Date]\t\t",
                "        ,I.[StartDateLocalKey]",
                "\t\t,D.[Invoicingdays]",
                "\t\t,D.[EndDateLocal] -- ",
                "\t    ,D.[DateReceivedLocal] -- ",
                "OPTION (RECOMPILE)"
              ],
              "dataSource": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>--Last Modified : 5-31-2023 [RK]",
                  "--Billing",
                  "---------------------------------------",
                  "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
                  "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
                  "DECLARE @StartDateLocal DATETIME = DATEADD(month, -1, DATEADD(day, 1 - day(getdate()), getdate())) --The first day of the month 12 months ago--",
                  "DECLARE @EndDateLocal DATETIME =CONVERT(VARCHAR(10), getdate(), 112)",
                  "",
                  "IF OBJECT_ID('Tempdb.dbo.#InvoiceOfInterest') IS NOT NULL DROP TABLE #InvoiceOfInterest",
                  "SELECT  F.[APInvoiceKey]",
                  "       ,F.[CarrierKey]",
                  "\t   ,F.[CustomerKey]",
                  "       ,F.[ModeKey]",
                  "\t   ,F.[ShipmentKey]",
                  "\t   ,[dt].[Date] ",
                  "\t   ,F.[StartDateLocalKey]",
                  "\t   ,ISNULL(F.[BlendedAPCost],0) AS BlendedAPCost",
                  "\t   \t   ",
                  "INTO #InvoiceOfInterest",
                  "FROM [UsrRpt].[FactFinance] F WITH ( NOLOCK )",
                  "  JOIN [UsrRpt].[DimDate] dt ON F.StartDateLocalKey = dt.DateKey",
                  "WHERE F.StartDateLocalKey>=@StartDate",
                  "\tAND F.StartDateLocalKey<=@EndDate",
                  "\tAND F.[FinancialTypeKey] IN (1,3)",
                  "--CREATE UNIQUE NONCLUSTERED INDEX idxInvInt on #InvoiceOfInterest([APInvoiceKey])",
                  "",
                  "",
                  "IF OBJECT_ID('Tempdb.dbo.#InvoicesDays') IS NOT NULL DROP TABLE #InvoicesDays",
                  "SELECT  [APInvoiceKey]",
                  "\t   ,[EndDateLocal]",
                  "\t   ,[DateReceivedLocal]",
                  "\t   ,DATEDIFF(day, EndDateLocal, DateReceivedLocal) AS [Invoicingdays]",
                  "INTO #InvoicesDays",
                  "FROM [UsrRpt].[DimAPInvoice] WITH ( NOLOCK )",
                  "WHERE 1=1",
                  "\tAND StartDateLocal>=@StartDateLocal",
                  "\tAND StartDateLocal<=@EndDateLocal",
                  "\tOPTION (RECOMPILE)",
                  "",
                  "-- Final-- ",
                  "SELECT ",
                  "\t\t I.[APInvoiceKey]",
                  "\t\t,I.[CarrierKey]",
                  "\t\t,I.[CustomerKey]",
                  "\t\t,I.[ModeKey]",
                  "\t\t,I.[ShipmentKey]",
                  "\t\t,I.[Date] ",
                  "\t\t,I.[StartDateLocalKey]",
                  "\t\t,D.[Invoicingdays]",
                  "\t\t,D.[EndDateLocal] -- ",
                  "\t    ,D.[DateReceivedLocal] -- ",
                  "\t\t,SUM(I.[BlendedAPCost]) AS BlendedAPCost",
                  "",
                  "FROM #InvoiceOfInterest I",
                  "LEFT JOIN #InvoicesDays D WITH ( NOLOCK ) ON I.APInvoiceKey=D.APInvoiceKey",
                  "GROUP BY I.[APInvoiceKey]",
                  "\t\t,I.[CarrierKey]",
                  "\t\t,I.[CustomerKey]",
                  "\t\t,I.[ModeKey]",
                  "\t\t,I.[ShipmentKey]",
                  "\t\t,I.[Date]\t\t",
                  "        ,I.[StartDateLocalKey]",
                  "\t\t,D.[Invoicingdays]",
                  "\t\t,D.[EndDateLocal] -- ",
                  "\t    ,D.[DateReceivedLocal] -- ",
                  "OPTION (RECOMPILE)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "measures": [
          {
            "name": "calcTotalCost",
            "expression": " SUM(FactBilling[BlendedAPCost])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "calcTotalAPInvoices",
            "expression": " DISTINCTCOUNT(FactBilling[APInvoiceKey])",
            "formatString": "#,0"
          },
          {
            "name": "ShipmentCount180DAvg",
            "expression": [
              " ",
              "VAR NumOfDays = 180",
              "VAR LastCurrentDate =",
              "    MAX ( 'DateTable'[Date] )",
              "VAR Period =",
              "    DATESINPERIOD ( 'DateTable'[Date], LastCurrentDate, - NumOfDays, DAY )",
              "VAR Result = ",
              "    CALCULATE ( ",
              "        AVERAGEX ( ",
              "            VALUES ( 'DateTable'[Date] ), ",
              "            [ShipmentTotal]",
              "        ),",
              "        Period",
              "    )",
              "VAR FirstDateInPeriod = MINX ( Period, 'DateTable'[Date] )",
              "VAR LastDateWithSales = MAX ( FactShipment[StartDateLocal] )",
              "RETURN",
              "   IF ( FirstDateInPeriod <= LastDateWithSales, Result )",
              "  "
            ],
            "formatString": "0"
          },
          {
            "name": "calcInvoicesManualApproved",
            "expression": [
              " CALCULATE([calcTotalAPInvoices],FILTER('DimInvoice','DimInvoice'[InvoiceApprovalMethod]=\"MANUAL\"))",
              ""
            ],
            "formatString": "#,0"
          },
          {
            "name": "calcInvoicesManualApproved%",
            "expression": " DIVIDE([calcInvoicesManualApproved],[calcTotalAPInvoices])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "calcInvoicesEDI",
            "expression": " CALCULATE([calcTotalAPInvoices],FILTER('DimInvoice','DimInvoice'[InvoiceUploadMode]=\"EDI\" || 'DimInvoice'[InvoiceUploadMode]=\"Web\" ))",
            "formatString": "#,0"
          },
          {
            "name": "calcInvoicesEDI%",
            "expression": " DIVIDE([calcInvoicesEDI], [calcTotalAPInvoices])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "calcInvoicesDisputed",
            "expression": " CALCULATE([calcTotalAPInvoices],NOT DimInvoice[InvoiceApprovalMethod] in {\"AUTO\", \"MANUAL\"}  )",
            "formatString": "#,0"
          },
          {
            "name": "calcInvoicesDisputed%",
            "expression": " DIVIDE([calcInvoicesDisputed], [calcTotalAPInvoices])",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "calcInvoicesAutoApproved",
            "expression": " CALCULATE([calcTotalAPInvoices],FILTER('DimInvoice','DimInvoice'[InvoiceApprovalMethod]=\"AUTO\"))",
            "formatString": "#,0"
          },
          {
            "name": "calcInvoicesAutoApproved%",
            "expression": " IF(ISBLANK([calcInvoicesAutoApproved]),\"N/A\", DIVIDE( [calcInvoicesAutoApproved] ,[calcTotalAPInvoices]))",
            "formatString": "0.0%;-0.0%;0.0%"
          },
          {
            "name": "calcTimelyInvoicingAvgDays",
            "expression": " ROUND(AVERAGEX(FactBilling,[Invoicingdays]),0)",
            "formatString": "0"
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "--Last Modified : 5-31-2023 [RK]",
              "--Billing",
              "---------------------------------------",
              "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
              "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
              "DECLARE @StartDateLocal DATETIME = DATEADD(month, -1, DATEADD(day, 1 - day(getdate()), getdate())) --The first day of the month 12 months ago--",
              "DECLARE @EndDateLocal DATETIME =CONVERT(VARCHAR(10), getdate(), 112)",
              "",
              "IF OBJECT_ID('Tempdb.dbo.#InvoiceOfInterest') IS NOT NULL DROP TABLE #InvoiceOfInterest",
              "SELECT  F.[APInvoiceKey]",
              "       ,F.[CarrierKey]",
              "\t   ,F.[CustomerKey]",
              "       ,F.[ModeKey]",
              "\t   ,F.[ShipmentKey]",
              "\t   ,[dt].[Date] ",
              "\t   ,F.[StartDateLocalKey]",
              "\t   ,ISNULL(F.[BlendedAPCost],0) AS BlendedAPCost",
              "\t   \t   ",
              "INTO #InvoiceOfInterest",
              "FROM [UsrRpt].[FactFinance] F WITH ( NOLOCK )",
              "  JOIN [UsrRpt].[DimDate] dt ON F.StartDateLocalKey = dt.DateKey",
              "WHERE F.StartDateLocalKey>=@StartDate",
              "\tAND F.StartDateLocalKey<=@EndDate",
              "\tAND F.[FinancialTypeKey] IN (1,3)",
              "--CREATE UNIQUE NONCLUSTERED INDEX idxInvInt on #InvoiceOfInterest([APInvoiceKey])",
              "",
              "",
              "IF OBJECT_ID('Tempdb.dbo.#InvoicesDays') IS NOT NULL DROP TABLE #InvoicesDays",
              "SELECT  [APInvoiceKey]",
              "\t   ,[EndDateLocal]",
              "\t   ,[DateReceivedLocal]",
              "\t   ,DATEDIFF(day, EndDateLocal, DateReceivedLocal) AS [Invoicingdays]",
              "INTO #InvoicesDays",
              "FROM [UsrRpt].[DimAPInvoice] WITH ( NOLOCK )",
              "WHERE 1=1",
              "\tAND StartDateLocal>=@StartDateLocal",
              "\tAND StartDateLocal<=@EndDateLocal",
              "\tOPTION (RECOMPILE)",
              "",
              "-- Final-- ",
              "SELECT ",
              "\t\t I.[APInvoiceKey]",
              "\t\t,I.[CarrierKey]",
              "\t\t,I.[CustomerKey]",
              "\t\t,I.[ModeKey]",
              "\t\t,I.[ShipmentKey]",
              "\t\t,I.[Date] ",
              "\t\t,I.[StartDateLocalKey]",
              "\t\t,D.[Invoicingdays]",
              "\t\t,D.[EndDateLocal] -- ",
              "\t    ,D.[DateReceivedLocal] -- ",
              "\t\t,SUM(I.[BlendedAPCost]) AS BlendedAPCost",
              "",
              "FROM #InvoiceOfInterest I",
              "LEFT JOIN #InvoicesDays D WITH ( NOLOCK ) ON I.APInvoiceKey=D.APInvoiceKey",
              "GROUP BY I.[APInvoiceKey]",
              "\t\t,I.[CarrierKey]",
              "\t\t,I.[CustomerKey]",
              "\t\t,I.[ModeKey]",
              "\t\t,I.[ShipmentKey]",
              "\t\t,I.[Date]\t\t",
              "        ,I.[StartDateLocalKey]",
              "\t\t,D.[Invoicingdays]",
              "\t\t,D.[EndDateLocal] -- ",
              "\t    ,D.[DateReceivedLocal] -- ",
              "OPTION (RECOMPILE)"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "FactBilling"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>--Last Modified : 5-31-2023 [RK]",
              "--Billing",
              "---------------------------------------",
              "DECLARE @StartDate int = CONVERT(INT, CONVERT(VARCHAR(8),DATEADD(yy,-1,DATEADD(yy,DATEDIFF(yy,0,GETDATE()),0)), 112))",
              "DECLARE @EndDate int = CONVERT(INT, CONVERT(VARCHAR(8), GETDATE(), 112))",
              "DECLARE @StartDateLocal DATETIME = DATEADD(month, -1, DATEADD(day, 1 - day(getdate()), getdate())) --The first day of the month 12 months ago--",
              "DECLARE @EndDateLocal DATETIME =CONVERT(VARCHAR(10), getdate(), 112)",
              "",
              "IF OBJECT_ID('Tempdb.dbo.#InvoiceOfInterest') IS NOT NULL DROP TABLE #InvoiceOfInterest",
              "SELECT  F.[APInvoiceKey]",
              "       ,F.[CarrierKey]",
              "\t   ,F.[CustomerKey]",
              "       ,F.[ModeKey]",
              "\t   ,F.[ShipmentKey]",
              "\t   ,[dt].[Date] ",
              "\t   ,F.[StartDateLocalKey]",
              "\t   ,ISNULL(F.[BlendedAPCost],0) AS BlendedAPCost",
              "\t   \t   ",
              "INTO #InvoiceOfInterest",
              "FROM [UsrRpt].[FactFinance] F WITH ( NOLOCK )",
              "  JOIN [UsrRpt].[DimDate] dt ON F.StartDateLocalKey = dt.DateKey",
              "WHERE F.StartDateLocalKey>=@StartDate",
              "\tAND F.StartDateLocalKey<=@EndDate",
              "\tAND F.[FinancialTypeKey] IN (1,3)",
              "--CREATE UNIQUE NONCLUSTERED INDEX idxInvInt on #InvoiceOfInterest([APInvoiceKey])",
              "",
              "",
              "IF OBJECT_ID('Tempdb.dbo.#InvoicesDays') IS NOT NULL DROP TABLE #InvoicesDays",
              "SELECT  [APInvoiceKey]",
              "\t   ,[EndDateLocal]",
              "\t   ,[DateReceivedLocal]",
              "\t   ,DATEDIFF(day, EndDateLocal, DateReceivedLocal) AS [Invoicingdays]",
              "INTO #InvoicesDays",
              "FROM [UsrRpt].[DimAPInvoice] WITH ( NOLOCK )",
              "WHERE 1=1",
              "\tAND StartDateLocal>=@StartDateLocal",
              "\tAND StartDateLocal<=@EndDateLocal",
              "\tOPTION (RECOMPILE)",
              "",
              "-- Final-- ",
              "SELECT ",
              "\t\t I.[APInvoiceKey]",
              "\t\t,I.[CarrierKey]",
              "\t\t,I.[CustomerKey]",
              "\t\t,I.[ModeKey]",
              "\t\t,I.[ShipmentKey]",
              "\t\t,I.[Date] ",
              "\t\t,I.[StartDateLocalKey]",
              "\t\t,D.[Invoicingdays]",
              "\t\t,D.[EndDateLocal] -- ",
              "\t    ,D.[DateReceivedLocal] -- ",
              "\t\t,SUM(I.[BlendedAPCost]) AS BlendedAPCost",
              "",
              "FROM #InvoiceOfInterest I",
              "LEFT JOIN #InvoicesDays D WITH ( NOLOCK ) ON I.APInvoiceKey=D.APInvoiceKey",
              "GROUP BY I.[APInvoiceKey]",
              "\t\t,I.[CarrierKey]",
              "\t\t,I.[CustomerKey]",
              "\t\t,I.[ModeKey]",
              "\t\t,I.[ShipmentKey]",
              "\t\t,I.[Date]\t\t",
              "        ,I.[StartDateLocalKey]",
              "\t\t,D.[Invoicingdays]",
              "\t\t,D.[EndDateLocal] -- ",
              "\t    ,D.[DateReceivedLocal] -- ",
              "OPTION (RECOMPILE)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimInvoice",
        "columns": [
          {
            "name": "APInvoiceKey",
            "dataType": "int64",
            "sourceColumn": "APInvoiceKey",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "InvoiceUploadMode",
            "dataType": "string",
            "sourceColumn": "InvoiceUploadMode",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "InvoiceApprovalMethod",
            "dataType": "string",
            "sourceColumn": "InvoiceApprovalMethod",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "DimInvoice",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "-- Last Modified : 5-1-2023 [RK]",
                "-- Dim Invoice -- ",
                "--================================",
                "",
                "DECLARE @StartDate DATETIME = CONVERT(VARCHAR(10), DATEADD(month, -11, DATEADD(day, 1 - day(getdate()), getdate())), 112) --The first day of the month 12 months ago--",
                "DECLARE @EndDate DATETIME =CONVERT(VARCHAR(10), getdate(), 112)",
                "",
                "IF OBJECT_ID( 'tempdb.dbo.#InvoiceOfInterest' ) IS NOT NULL DROP TABLE #InvoiceOfInterest",
                "(",
                "SELECT  [APInvoiceKey]",
                "INTO #InvoiceOfInterest",
                "FROM [UsrRpt].[DimAPInvoice] WITH ( NOLOCK )",
                "WHERE 1=1",
                "AND StartDateLocal>=@StartDate",
                "AND StartDateLocal<=@EndDate",
                ")",
                "SELECT",
                "I.[APInvoiceKey]",
                ",D.[EntryMode] AS [InvoiceUploadMode] ",
                ",D.[Match] AS [InvoiceApprovalMethod]",
                "",
                "FROM #InvoiceOfInterest I",
                "INNER JOIN [UsrRpt].[DimAPInvoice] D WITH ( NOLOCK ) ON I.APInvoiceKey=D.APInvoiceKey",
                "OPTION (RECOMPILE)"
              ],
              "dataSource": "AzureSqlDW rxomtpusc1antsasq0001.database.windows.net NextgenDW"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Last Modified : 5-1-2023 [RK]",
                  "-- Dim Invoice -- ",
                  "--================================",
                  "",
                  "DECLARE @StartDate DATETIME = CONVERT(VARCHAR(10), DATEADD(month, -11, DATEADD(day, 1 - day(getdate()), getdate())), 112) --The first day of the month 12 months ago--",
                  "DECLARE @EndDate DATETIME =CONVERT(VARCHAR(10), getdate(), 112)",
                  "",
                  "IF OBJECT_ID( 'tempdb.dbo.#InvoiceOfInterest' ) IS NOT NULL DROP TABLE #InvoiceOfInterest",
                  "(",
                  "SELECT  [APInvoiceKey]",
                  "INTO #InvoiceOfInterest",
                  "FROM [UsrRpt].[DimAPInvoice] WITH ( NOLOCK )",
                  "WHERE 1=1",
                  "AND StartDateLocal>=@StartDate",
                  "AND StartDateLocal<=@EndDate",
                  ")",
                  "SELECT",
                  "I.[APInvoiceKey]",
                  ",D.[EntryMode] AS [InvoiceUploadMode] ",
                  ",D.[Match] AS [InvoiceApprovalMethod]",
                  "",
                  "FROM #InvoiceOfInterest I",
                  "INNER JOIN [UsrRpt].[DimAPInvoice] D WITH ( NOLOCK ) ON I.APInvoiceKey=D.APInvoiceKey",
                  "OPTION (RECOMPILE)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "-- Last Modified : 5-1-2023 [RK]",
              "-- Dim Invoice -- ",
              "--================================",
              "",
              "DECLARE @StartDate DATETIME = CONVERT(VARCHAR(10), DATEADD(month, -11, DATEADD(day, 1 - day(getdate()), getdate())), 112) --The first day of the month 12 months ago--",
              "DECLARE @EndDate DATETIME =CONVERT(VARCHAR(10), getdate(), 112)",
              "",
              "IF OBJECT_ID( 'tempdb.dbo.#InvoiceOfInterest' ) IS NOT NULL DROP TABLE #InvoiceOfInterest",
              "(",
              "SELECT  [APInvoiceKey]",
              "INTO #InvoiceOfInterest",
              "FROM [UsrRpt].[DimAPInvoice] WITH ( NOLOCK )",
              "WHERE 1=1",
              "AND StartDateLocal>=@StartDate",
              "AND StartDateLocal<=@EndDate",
              ")",
              "SELECT",
              "I.[APInvoiceKey]",
              ",D.[EntryMode] AS [InvoiceUploadMode] ",
              ",D.[Match] AS [InvoiceApprovalMethod]",
              "",
              "FROM #InvoiceOfInterest I",
              "INNER JOIN [UsrRpt].[DimAPInvoice] D WITH ( NOLOCK ) ON I.APInvoiceKey=D.APInvoiceKey",
              "OPTION (RECOMPILE)"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimInvoice"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>-- Last Modified : 5-1-2023 [RK]",
              "-- Dim Invoice -- ",
              "--================================",
              "",
              "DECLARE @StartDate DATETIME = CONVERT(VARCHAR(10), DATEADD(month, -11, DATEADD(day, 1 - day(getdate()), getdate())), 112) --The first day of the month 12 months ago--",
              "DECLARE @EndDate DATETIME =CONVERT(VARCHAR(10), getdate(), 112)",
              "",
              "IF OBJECT_ID( 'tempdb.dbo.#InvoiceOfInterest' ) IS NOT NULL DROP TABLE #InvoiceOfInterest",
              "(",
              "SELECT  [APInvoiceKey]",
              "INTO #InvoiceOfInterest",
              "FROM [UsrRpt].[DimAPInvoice] WITH ( NOLOCK )",
              "WHERE 1=1",
              "AND StartDateLocal>=@StartDate",
              "AND StartDateLocal<=@EndDate",
              ")",
              "SELECT",
              "I.[APInvoiceKey]",
              ",D.[EntryMode] AS [InvoiceUploadMode] ",
              ",D.[Match] AS [InvoiceApprovalMethod]",
              "",
              "FROM #InvoiceOfInterest I",
              "INNER JOIN [UsrRpt].[DimAPInvoice] D WITH ( NOLOCK ) ON I.APInvoiceKey=D.APInvoiceKey",
              "OPTION (RECOMPILE)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "30c28f1e-b5fb-40ef-8b29-726e93f53660",
        "fromTable": "FactShipment",
        "fromColumn": "StartDateLocal",
        "toTable": "DateTable",
        "toColumn": "Date"
      },
      {
        "name": "2bb4bdcd-a925-4fb2-87f3-3446e3353d31",
        "fromTable": "FactShipment",
        "fromColumn": "CustomerKey",
        "toTable": "DimCustomer",
        "toColumn": "CustomerKey"
      },
      {
        "name": "b5aa59d5-2f85-49c1-90e5-c3dcbd30e4da",
        "fromTable": "FactShipment",
        "fromColumn": "CarrierKey",
        "toTable": "DimCarrier",
        "toColumn": "CarrierKey"
      },
      {
        "name": "247287dc-2ad2-4726-8237-6175bce250db",
        "fromTable": "FactTender",
        "fromColumn": "TenderDate",
        "toTable": "DateTable",
        "toColumn": "Date"
      },
      {
        "name": "b93e7b6d-2e4a-4daa-b7ce-4230e2bb0b34",
        "fromTable": "FactOnTimePerformance",
        "fromColumn": "Date",
        "toTable": "DateTable",
        "toColumn": "Date"
      },
      {
        "name": "153a068a-fb76-42d8-8955-c2132404b7d3",
        "fromTable": "FactTender",
        "fromColumn": "CustomerKey",
        "toTable": "DimCustomer",
        "toColumn": "CustomerKey"
      },
      {
        "name": "8348e458-950b-4387-bea0-641df94c6f38",
        "fromTable": "FactOnTimePerformance",
        "fromColumn": "CustomerKey",
        "toTable": "DimCustomer",
        "toColumn": "CustomerKey"
      },
      {
        "name": "b3f063e9-4daf-46f7-8506-080074cc32a2",
        "fromTable": "FactOnTimePerformance",
        "fromColumn": "CarrierKey",
        "toTable": "DimCarrier",
        "toColumn": "CarrierKey"
      },
      {
        "name": "66bee12f-8260-4880-9820-f5ea60e26373",
        "fromTable": "FactTender",
        "fromColumn": "TenderCarrierKey",
        "toTable": "DimCarrier",
        "toColumn": "CarrierKey"
      },
      {
        "name": "3e04628b-c23d-4d84-8621-ab0602b31ab5",
        "fromTable": "FactTender",
        "fromColumn": "ModeKey",
        "toTable": "DimMode",
        "toColumn": "ModeKey"
      },
      {
        "name": "f593a26a-cd54-4158-b36f-2441dc0df21c",
        "fromTable": "FactOnTimePerformance",
        "fromColumn": "ModeKey",
        "toTable": "DimMode",
        "toColumn": "ModeKey"
      },
      {
        "name": "6e69580f-e40b-4a40-967a-4e1d7c85654e",
        "fromTable": "FactShipment",
        "fromColumn": "ModeKey",
        "toTable": "DimMode",
        "toColumn": "ModeKey"
      },
      {
        "name": "04b6ce4b-55cf-48f9-bbf3-8aa207e5fbc2",
        "fromTable": "FactOnTimePerformance",
        "fromColumn": "EventTypeKey",
        "toTable": "DimEventType",
        "toColumn": "EventTypeKey"
      },
      {
        "name": "200d1a1f-7138-48b1-8b9a-fccc80361822",
        "fromTable": "FactShipment",
        "fromColumn": "SourceLocationKey",
        "toTable": "DimSourceLocation",
        "toColumn": "LocationKey"
      },
      {
        "name": "24f6f2b4-716d-464a-9039-b8eea44996fe",
        "fromTable": "FactShipment",
        "fromColumn": "DestinationLocationKey",
        "toTable": "DimDestinationLocation",
        "toColumn": "LocationKey"
      },
      {
        "name": "7d9f4e35-bf78-4cbe-85cd-d09af3dca0a8",
        "fromTable": "FactTender",
        "fromColumn": "SourceLocationKey",
        "toTable": "DimSourceLocation",
        "toColumn": "LocationKey"
      },
      {
        "name": "287fbca9-e70a-4ae9-bd15-8a53d83e513f",
        "fromTable": "FactTender",
        "fromColumn": "DestinationLocationKey",
        "toTable": "DimDestinationLocation",
        "toColumn": "LocationKey"
      },
      {
        "name": "aa44f44f-d0d7-463d-b80e-905a0e25d5a9",
        "fromTable": "FactOrder",
        "fromColumn": "CustomerKey",
        "toTable": "DimCustomer",
        "toColumn": "CustomerKey"
      },
      {
        "name": "11bdf91a-a192-46d0-aaf5-5b95527892ff",
        "fromTable": "FactOrder",
        "fromColumn": "ModifiedDate",
        "toTable": "DateTable",
        "toColumn": "Date"
      },
      {
        "name": "3f03edd3-7478-4c62-abf6-8519545e9e25",
        "fromTable": "FactBilling",
        "fromColumn": "Date",
        "toTable": "DateTable",
        "toColumn": "Date"
      },
      {
        "name": "1df26164-23b7-4594-9fc9-2314e413dfaa",
        "fromTable": "FactBilling",
        "fromColumn": "CustomerKey",
        "toTable": "DimCustomer",
        "toColumn": "CustomerKey"
      },
      {
        "name": "ed5c705c-83aa-4f08-bc47-a88e6f4c7557",
        "fromTable": "FactBilling",
        "fromColumn": "CarrierKey",
        "toTable": "DimCarrier",
        "toColumn": "CarrierKey"
      },
      {
        "name": "1bcb896b-3581-48a9-81af-86e4af48e67b",
        "fromTable": "FactBilling",
        "fromColumn": "APInvoiceKey",
        "toTable": "DimInvoice",
        "toColumn": "APInvoiceKey"
      },
      {
        "name": "c5393b13-dd3e-44fb-95df-8330d3720baa",
        "fromTable": "FactBilling",
        "fromColumn": "ModeKey",
        "toTable": "DimMode",
        "toColumn": "ModeKey"
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "400"
      }
    ]
  },
  "id": "SemanticModel"
}